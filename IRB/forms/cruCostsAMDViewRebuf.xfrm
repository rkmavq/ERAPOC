<?xml version="1.0" encoding="UTF-8"?>
<form xmlns="http://www.w3.org/2002/06/xhtml2" xmlns:ix="http://itensil.com/ns/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:exf="http://www.exforms.org/exf/1-0" xmlns:xf="http://www.w3.org/2002/xforms"><xf:model id="fmodel"><xf:instance id="ins"><data/></xf:instance><xf:instance id="meta"><data/></xf:instance><xf:instance id="cats"><data/></xf:instance><xf:instance id="review"><data/></xf:instance><xf:instance id="form"><data><tabID>35c</tabID><ping>0</ping><AMD/><form updatedBy="" updated="" createdBy="" created=""/><tempRevIndex>-1</tempRevIndex><tempSugIndex>1</tempSugIndex><searchText/><searchAddNew/><records/><fullSearchText/><fullSearchRecords/><col1/><col2/><col3/><document/><temp/><someVariable id=""/><fragmentId/><comp uri=""/><loggedInUserId/><loggedInUserName/><pagemode/></data></xf:instance><xf:instance id="bootstrap"><data><js>/resources/services/appForms/main.js</js></data></xf:instance><xf:instance id="config"><data/></xf:instance><xf:instance id="baseOp"><data/></xf:instance><script ev:event="xforms-model-construct-done">
      bootstrapSharedXfrm(model);
      model.Frm = new appForm(model, "cruCosts");
      
      
      
      model.setValue("instance('form')/loggedInUserId", model.Frm.getLoggedInUserId()); 
      model.setValue("instance('form')/loggedInUserName", model.Frm.getLoggedInUserName()); 
      
      model.setValue("instance('form')/pagemode", model.Frm.getMode()); 
      
      model.setValue("instance('form')/AMD", "1"); model.__AMD = true;
        //model.Frm.loadAppFile('ins', "/data/irb.xml", "1");
        
        
        
        model.Frm.loadOpFile('ins', model.Frm.formSet.getRoot().__COMPREVURI, "1");model.Frm.loadAppFile('meta', "/data/projectData.xml", "0");model.Frm.loadAppFile('cats', "/data/catagories.xml", "0");model.Frm.loadOpFile('review', model.Frm.formSet.getRoot().__COMPREVURI, "1");
      model.Frm.loadMetaData();
      
      
        includeSharedJS("/resources/applications/IRB/js/clientSideFunctions.js");
        model.USA = new irbProtocol(model);
      
      model.refresh();
      model.rebuild();
      model.recalculate();
      <script ev:event="xforms-value-changed">
          //model.USA.registerChangeLog('review', '35c')
          //model.USA.registerChangeLog('ins', '35c')
          model.USA.registerChangeLog('comments', '35c')
        </script></script><script ev:event="xforms-ready"/><xf:submission instance="ins" id="submitins" replace="none" method="put"><xf:action ev:event="xforms-submit-done"/><xf:action ev:event="xforms-submit-error"><xf:message level="ephemeral">Problem saving (ins)</xf:message></xf:action></xf:submission><xf:submission instance="review" id="submitreview" replace="none" method="put"><xf:action ev:event="xforms-submit-done"/><xf:action ev:event="xforms-submit-error"><xf:message level="ephemeral">Problem saving (review)</xf:message></xf:action></xf:submission><xf:bind relevant="true()" readonly="false()" nodeset="instance(ins)//*"/><xf:bind relevant="true()" readonly="false()" nodeset="instance(meta)//*"/><xf:bind relevant="true()" readonly="false()" nodeset="instance(cats)//*"/><xf:bind readonly="true()" nodeset="//link/@title"/><xf:bind nodeset="instance('form')/document" type="ix:file"/><xf:bind nodeset="instance('ins')/totalCosts" type="xsd:integer"/><xf:bind nodeset="instance('ins')/totalCRUCosts" type="xsd:integer"/><xf:bind nodeset="instance('ins')/compTotalCRU" type="xsd:integer"/><xf:bind nodeset="instance('ins')/totalCRU" type="xsd:integer"/><xf:bind type="xsd:integer" nodeset="instance('ins')/Cost/costsPerTest"/><xf:bind type="xsd:integer" nodeset="instance('ins')/Cost/costsNumTests"/><xf:bind type="xsd:integer" readonly="true()" relevant="false()" nodeset="instance('ins')/Cost/costsLineTotal" calculate="../costsPerTest * ../costsNumTests"/><xf:bind type="xsd:integer" readonly="true()" relevant="false()" nodeset="instance('ins')/totalCosts" calculate="sum(instance('ins')/Cost/costsLineTotal)"/><xf:bind type="xsd:integer" readonly="true()" relevant="false()" nodeset="instance('ins')/totalCRUCosts" calculate="sum(instance('ins')/Cost[costsWhoWillPay='4']/costsLineTotal)"/><xf:bind type="xsd:integer" readonly="true()" relevant="false()" nodeset="instance('ins')/compTotalCRU" calculate="instance('ins')/compTotalCRU"/><xf:bind type="xsd:integer" readonly="true()" relevant="false()" nodeset="instance('ins')/totalCRU" calculate="instance('ins')/totalCRUCosts + instance('ins')/compTotalCRU"/></xf:model><script ev:event="xforms-value-changed">
          model.USA.___EVAL_CHANGE_ON_SAVE = true;
        </script><style>
          div.formFrame div.commentBox{
          background-color:white;
          border: 2px solid gray;
          padding: 5px;
          width: 500px;
          }
          
          div.formFrame div.commentBox div.xfctrl{
          background-color:none;
          }
          
          div.formFrame div.commentBox div.xfctrl label{
          width:100px;
          }
          
          div.formFrame div.commentBox div.xfctrl textarea{
          width:390px;
          }
          
          
          div.formFrame td.custError{
          background-color:none;
          border:none;
          vertical-align:top;
          width:200px;
          padding-left:10px;
          color:red;
          font-weight:bold;
          }
          
          div.formFrame td.custError div.xfctrl tr{
            background-color:#f3f6fb !important;
          }
          
          div.formFrame td.custError div.xfctrl tr td{
            background-color:#f3f6fb !important;
          }
          
          div.formFrame tr td.custError div.xfctrl{
            background-color:#f3f6fb !important;
          }
          
          div.formFrame td.custError div{
          background-color:#f3f6fb !important;
          }
          
          div.formFrame td.custError .xfctrl{
            background-color:#f3f6fb !important;
          }
          
          div.formFrame table.fullColLayout tr td.custError div.xfctrl{
          background-color:none;
          }
          
          
          .wikiView div.formFrame table.fullColLayout tr td.custError div.xfctrl textarea {
          margin-top:10px;
          }
          
          .wikiView div.formFrame table.fullColLayout tr td.custError div.xfctrl {
            position:static;
            border-color:white;
          }
          div.formFrame tr td.custError div.xfctrl{
            position:static;
            border-color:white;
          }          
          
          .wikiView div.formFrame table.basicColLayout tr td.custError div.xfctrl textarea  {
            margin-top:10px;
          }
          
        </style><ix:template name="QuickSearch"><div style="padding:8px;width:400px"><table style="width:240px"><tr><td><xf:input id="searchBox" ref="instance('form')/searchText" style="width:140px"><xf:label style="width:50px">Lookup:</xf:label></xf:input></td><td><div style="margin-right:20px;"><u class="link" style="color:blue;cursor:pointer;text-decoration:underline;">Go</u><script ev:event="click">
                  model.Frm.executeQuickSearch();  
                </script></div></td></tr></table><hr/><xf:switch><xf:case exf:if="1" id="hide-quicksearch"/><xf:case id="show-quicksearch"><exf:variable name="records" value="instance('form')/records//rec"/><exf:variable name="pingVar" value="instance('form')/ping"/><div><ix:attr name="style" value="if($pingVar &gt; 0 and $pingVar &gt; 20, '', 'display:none')"/><h3><xf:output value="instance('form')/ping"/> records available, displaying the top 20 rows. Please use the Lookup box to search.</h3></div><div><ix:attr name="style" value="if($pingVar &gt; 0 and $pingVar &lt; 20, '', 'display:none')"/><h3><xf:output value="instance('form')/ping"/> records available, displaying <xf:output value="instance('form')/ping"/> rows. Please use the Lookup box to search.</h3></div><div><ix:attr name="style" value="if(count($records)=0, '', 'display:none')"/><h1>No Matches</h1><div><ix:attr value="if(instance('form')/searchAddNew='1', 'margin-left:10px;margin-top:20px;', 'display:none')" name="style"/>...please refine your search, <br/><br/><span style="margin-left:20px;">or 
                    <u style="cursor:pointer;color:blue">request that this <xf:output value="script('model.Frm.quickSearch.addNew.entName;')"/> be added to the system.
                      
                      <xf:action ev:event="click"><xf:setvalue value="instance('form')/searchText" ref="instance('form')/t[@i='1']"/><ix:dialog style="width:400px;" id="newValue" title="Add New Value" class="quickSearchDialog"><xf:repeat nodeset="instance('form')/t[@l!='']"><xf:input ref="."><ix:attr value="if(@t='text', 'width:400px;', 'display:none')" name="style"/><xf:label style="width:150px;"><xf:output value="@l"/></xf:label></xf:input><xf:select ref="." appearance="full"><ix:attr value="if(@t='yn', 'margin-left:150px;width:250px;', 'display:none')" name="style"/><xf:item><xf:label><xf:output value="@l"/></xf:label><xf:value>1</xf:value></xf:item></xf:select></xf:repeat><br/><table style=""><tr><td style="margin-right:10px;"><xf:trigger style="background-color:#DDDDDD;border-color:black;"><xf:label>Add</xf:label><xf:action ev:event="DOMActivate"><script>
                                      model.Frm.addFromQuickSearch();
                                    </script><xf:close ev:event="DOMActivate"/></xf:action></xf:trigger></td><td style="width:50%"><xf:trigger style="background-color:#DDDDDD;border-color:black;"><xf:label>Cancel</xf:label><xf:action ev:event="DOMActivate"><script>model.Frm.resetQuickSearch()</script><xf:close ev:event="DOMActivate"/></xf:action></xf:trigger></td></tr></table></ix:dialog></xf:action></u></span></div></div><div><ix:attr value="if(count($records) &gt; 150, '', 'display:none')" name="style"/><h1>Too Many Matches</h1>Please refine your search.</div><table class="quickSearchMatches"><ix:attr value="if(count($records) &lt;= 500 and count($records) &gt; 0, '', 'display:none')" name="style"/><tr><th style="text-align:left;"><xf:output value="instance('form')/col1"/></th><th style="text-align:left;padding-left:20px"><xf:output value="instance('form')/col2"/></th><th style="text-align:left;padding-left:20px"><xf:output value="instance('form')/col3"/></th></tr><xf:repeat nodeset="$records"><tr><td style="vertical-align:top; width:33%"><u class="clickable"><xf:output value="(attribute::node())[position()=script('SH.is_ie ? 4 : 3')]"/><xf:close ev:event="click"/><script ev:event="click"> 
                              var indx = model.getValue("@id", contextNode);
                              var val = model.getValue("@name", contextNode);
                              if(val == "") val = model.getValue("(attribute::node())[position()=script('SH.is_ie ? 4 : 3')]", contextNode);
                              model.Frm.quickSearchSelect(indx, val);
                              var code = model.Frm.quickSearch.code;
                              if(code) eval(code);
                              if(model.Frm.quickSearch.save) model.Frm.saveAll();
                              event.stopPropagation();
                            </script></u></td><td style="vertical-align:top;padding-left:20px; width:30%"><xf:output value="if(instance('form')/col2 and instance('form')/col2 != '', (attribute::node())[position()=script('SH.is_ie ? 3 : 2')], '')"/></td><td style="vertical-align:top;padding-left:20px; width:30%"><xf:output value="if(instance('form')/col3 and instance('form')/col3 != '', (attribute::node())[position()=script('SH.is_ie ? 2 : 1')], '')"/></td></tr></xf:repeat></table><br/><br/></xf:case></xf:switch></div></ix:template><div class="formFrame" id="allcontrols"><div style="display:none;"><xf:input id="documentDrop" ref="instance('form')/document"><xf:action ev:event="xforms-value-changed" exf:if="instance('form')/document != ''"><script> 
                var n = model.getValue(".", contextNode);
                if(n != "") model.Frm.linkFile(n);
                document.__UPLOADTYPE = "";//Re-setting the value
              </script></xf:action></xf:input></div><table class="formMetaLine"><tr/></table><div class="body"><h1/><table class="basicColLayout"><tr class="instructions"><td colspan="4"><span><h4><font size="2"><component type="instructions">
		Please list ALL laboratory tests (blood, urine, etc.) and procedures (EKG, fMRI, etc.) to be performed at the CRU, by the CRU staff or at the Imaging Core as part of this study.
		<option type="widestLabel"/>
	</component></font></h4></span></td></tr><tr class="entryTable"><xf:switch><xf:case exf:if="1" id="show-Cost"><td class="entryTable   widestLabel"><exf:variable value="instance('ins')/Cost" name="nsCost"/><h5/><div><ix:attr value="if(count(instance('ins')/Cost) = 0, '', 'display:none')" name="style"/><span style="color:red">At least 1 consent document is required</span></div><table class="fullColLayout"><ix:attr value="if(count($nsCost) &gt; 0, '', 'display:none')" name="style"/><tr class="top"><th/><th/><th class=" in dropdown large left">Type of Test</th><th class="costsTypeOther in manual medium center"><ix:attr value="if(count(instance('ins')/Cost/costsType[.='oth']) &gt; 0, '', 'display:none')" name="style"/>Specify Other Type of Test</th><th class=" in dropdown large left">Site of Analysis</th><th class="costsSiteAnalysisOther in manual medium center"><ix:attr value="if(count(instance('ins')/Cost/costsSiteAnalysis[.='oth']) &gt; 0, '', 'display:none')" name="style"/>Specify Other Site of Analysis</th><th class=" in text medium center">Cost Per Test</th><th class=" in text medium center"># of Tests</th><th class=" in text medium center">Line Total</th><th class=" in dropdown large left">Who Will Pay</th><th class="costsWhoWillPayOther in manual medium center"><ix:attr value="if(count(instance('ins')/Cost/costsWhoWillPay[.='oth']) &gt; 0, '', 'display:none')" name="style"/>Specify Who Will Pay</th><td bgcolor="white"/></tr><xf:repeat nodeset="$nsCost"><exf:variable value="@id" name="nsXMLKEYCost"/><exf:variable value="@id" name="nsXMLKEY"/><tr valign="top"><td class="out text small center"><b style="color:red;cursor:pointer;">X
                    <xf:action ev:event="click"><xf:destroy ref="."/><script/></xf:action></b></td><td class="out text small center" style="vertical-align:middle;"><xf:output value="position()"/></td><td class=" in dropdown large left"><span><xf:select1 ref="costsType"><xf:item><xf:label>-Select-</xf:label><xf:value/></xf:item><xf:repeat nodeset="instance('cats')/CostTypes/type"><xf:item><xf:label><xf:output value="@name"/></xf:label><xf:value><xf:output value="@id"/></xf:value></xf:item></xf:repeat><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="../@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('Cost');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:select1></span></td><td class="costsTypeOther in manual medium center"><ix:attr value="if(count(instance('ins')/Cost/costsType[.='oth']) &gt; 0, '', 'display:none')" name="style"/><span><ix:attr value="if(count(instance('ins')/Cost/costsType[.='oth']) &gt; 0, '', 'display:none')" name="style"/><span><div style="width:105px;">
				<ix:attr name="style" value="if(costsType='oth', '', 'display:none')"/>
				<xf:input style="width:70px;" ref="costsTypeOther"/>
			</div></span><span style="display:none"><xf:input ref="costsTypeOther"><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="../@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;
                                  //App.currentRepeater = 'nsCost'; //WM: 11/14/2019 - flag the area being rebuilt so the UI can redisocver the tab position if needed
                                  model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('Cost');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></span></span></td><td class=" in dropdown large left"><span><xf:select1 ref="costsSiteAnalysis"><xf:item><xf:label>-Select-</xf:label><xf:value/></xf:item><xf:repeat nodeset="instance('cats')/AnalysisSiteTypes/type"><xf:item><xf:label><xf:output value="@name"/></xf:label><xf:value><xf:output value="@id"/></xf:value></xf:item></xf:repeat><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="../@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('Cost');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:select1></span></td><td class="costsSiteAnalysisOther in manual medium center"><ix:attr value="if(count(instance('ins')/Cost/costsSiteAnalysis[.='oth']) &gt; 0, '', 'display:none')" name="style"/><span><ix:attr value="if(count(instance('ins')/Cost/costsSiteAnalysis[.='oth']) &gt; 0, '', 'display:none')" name="style"/><span><div style="width:105px;">
				<ix:attr name="style" value="if(costsSiteAnalysis='oth', '', 'display:none')"/>
				<xf:input style="width:70px;" ref="costsSiteAnalysisOther"/>
			</div></span><span style="display:none"><xf:input ref="costsSiteAnalysisOther"><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="../@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;
                                  //App.currentRepeater = 'nsCost'; //WM: 11/14/2019 - flag the area being rebuilt so the UI can redisocver the tab position if needed
                                  model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('Cost');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></span></span></td><td class=" in text medium center"><span><xf:input ref="costsPerTest"><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="../@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('Cost');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></span></td><td class=" in text medium center"><span><xf:input ref="costsNumTests"><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="../@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('Cost');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></span></td><td class=" in text medium center"><span><xf:input ref="costsLineTotal"><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="../@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('Cost');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></span></td><td class=" in dropdown large left"><span><xf:select1 ref="costsWhoWillPay"><xf:item><xf:label>-Select-</xf:label><xf:value/></xf:item><xf:repeat nodeset="instance('cats')/CostPayeeTypes/type"><xf:item><xf:label><xf:output value="@name"/></xf:label><xf:value><xf:output value="@id"/></xf:value></xf:item></xf:repeat><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="../@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('Cost');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:select1></span></td><td class="costsWhoWillPayOther in manual medium center"><ix:attr value="if(count(instance('ins')/Cost/costsWhoWillPay[.='oth']) &gt; 0, '', 'display:none')" name="style"/><span><ix:attr value="if(count(instance('ins')/Cost/costsWhoWillPay[.='oth']) &gt; 0, '', 'display:none')" name="style"/><span><div style="width:105px;">
				<ix:attr name="style" value="if(costsWhoWillPay='oth', '', 'display:none')"/>
				<xf:input style="width:70px;" ref="costsWhoWillPayOther"/>
			</div></span><span style="display:none"><xf:input ref="costsWhoWillPayOther"><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="../@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;
                                  //App.currentRepeater = 'nsCost'; //WM: 11/14/2019 - flag the area being rebuilt so the UI can redisocver the tab position if needed
                                  model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('Cost');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></span></span></td><exf:variable value="@id" name="rowIndex"/><exf:variable value="concat(.,'')" name="theCurrentValue"/><exf:variable value="@id" name="nsXMLKEY"/><exf:variable value="concat(instance('ins')/original/Cost[@id=$nsXMLKEY]/.,'')" name="thePreviousValue"/><exf:variable value="concat(instance('ins')/previous/review/original/Cost[@id=$nsXMLKEY]/.,'')" name="thePreviousOrgValue"/><exf:variable value="concat(instance('ins')/suggestions/Cost[@id=$nsXMLKEY]/.,'')" name="theSuggestedValue"/><exf:variable value="instance('ins')/Cost[1]/@revIndex" name="revIndexCost"/><exf:variable value="(instance('ins')/amendmentNodes/Cost[@revIndex=$revIndexCost])" name="amdNodeNeedleCost"/><exf:variable value="(instance('ins')/Cost[@revIndex=$revIndexCost])" name="thisNodeNeedleCost"/><exf:variable value="concat(           if(instance('ins')/Cost[1], concat('('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/Cost)[1]/costsType]/@name,' / ',             instance('ins')/Cost[1]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/Cost)[1]/costsSiteAnalysis]/@name,' / ',             instance('ins')/Cost[1]/costsSiteAnalysisOther,' / ',             instance('ins')/Cost[1]/costsPerTest,' / ',             instance('ins')/Cost[1]/costsNumTests,' / ',             instance('ins')/Cost[1]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/Cost)[1]/costsWhoWillPay]/@name,' / ',             instance('ins')/Cost[1]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/Cost[2], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/Cost)[2]/costsType]/@name,' / ',             instance('ins')/Cost[2]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/Cost)[2]/costsSiteAnalysis]/@name,' / ',             instance('ins')/Cost[2]/costsSiteAnalysisOther,' / ',             instance('ins')/Cost[2]/costsPerTest,' / ',             instance('ins')/Cost[2]/costsNumTests,' / ',             instance('ins')/Cost[2]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/Cost)[2]/costsWhoWillPay]/@name,' / ',             instance('ins')/Cost[2]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/Cost[3], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/Cost)[3]/costsType]/@name,' / ',             instance('ins')/Cost[3]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/Cost)[3]/costsSiteAnalysis]/@name,' / ',             instance('ins')/Cost[3]/costsSiteAnalysisOther,' / ',             instance('ins')/Cost[3]/costsPerTest,' / ',             instance('ins')/Cost[3]/costsNumTests,' / ',             instance('ins')/Cost[3]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/Cost)[3]/costsWhoWillPay]/@name,' / ',             instance('ins')/Cost[3]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/Cost[4], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/Cost)[4]/costsType]/@name,' / ',             instance('ins')/Cost[4]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/Cost)[4]/costsSiteAnalysis]/@name,' / ',             instance('ins')/Cost[4]/costsSiteAnalysisOther,' / ',             instance('ins')/Cost[4]/costsPerTest,' / ',             instance('ins')/Cost[4]/costsNumTests,' / ',             instance('ins')/Cost[4]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/Cost)[4]/costsWhoWillPay]/@name,' / ',             instance('ins')/Cost[4]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/Cost[5], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/Cost)[5]/costsType]/@name,' / ',             instance('ins')/Cost[5]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/Cost)[5]/costsSiteAnalysis]/@name,' / ',             instance('ins')/Cost[5]/costsSiteAnalysisOther,' / ',             instance('ins')/Cost[5]/costsPerTest,' / ',             instance('ins')/Cost[5]/costsNumTests,' / ',             instance('ins')/Cost[5]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/Cost)[5]/costsWhoWillPay]/@name,' / ',             instance('ins')/Cost[5]/costsWhoWillPayOther , ')'), '')           )" name="thisNodeCost"/><exf:variable value="concat(           if(instance('ins')/original/Cost[1], concat('('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/original/Cost)[1]/costsType]/@name,' / ',             instance('ins')/original/Cost[1]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/original/Cost)[1]/costsSiteAnalysis]/@name,' / ',             instance('ins')/original/Cost[1]/costsSiteAnalysisOther,' / ',             instance('ins')/original/Cost[1]/costsPerTest,' / ',             instance('ins')/original/Cost[1]/costsNumTests,' / ',             instance('ins')/original/Cost[1]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/original/Cost)[1]/costsWhoWillPay]/@name,' / ',             instance('ins')/original/Cost[1]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/original/Cost[2], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/original/Cost)[2]/costsType]/@name,' / ',             instance('ins')/original/Cost[2]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/original/Cost)[2]/costsSiteAnalysis]/@name,' / ',             instance('ins')/original/Cost[2]/costsSiteAnalysisOther,' / ',             instance('ins')/original/Cost[2]/costsPerTest,' / ',             instance('ins')/original/Cost[2]/costsNumTests,' / ',             instance('ins')/original/Cost[2]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/original/Cost)[2]/costsWhoWillPay]/@name,' / ',             instance('ins')/original/Cost[2]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/original/Cost[3], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/original/Cost)[3]/costsType]/@name,' / ',             instance('ins')/original/Cost[3]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/original/Cost)[3]/costsSiteAnalysis]/@name,' / ',             instance('ins')/original/Cost[3]/costsSiteAnalysisOther,' / ',             instance('ins')/original/Cost[3]/costsPerTest,' / ',             instance('ins')/original/Cost[3]/costsNumTests,' / ',             instance('ins')/original/Cost[3]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/original/Cost)[3]/costsWhoWillPay]/@name,' / ',             instance('ins')/original/Cost[3]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/original/Cost[4], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/original/Cost)[4]/costsType]/@name,' / ',             instance('ins')/original/Cost[4]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/original/Cost)[4]/costsSiteAnalysis]/@name,' / ',             instance('ins')/original/Cost[4]/costsSiteAnalysisOther,' / ',             instance('ins')/original/Cost[4]/costsPerTest,' / ',             instance('ins')/original/Cost[4]/costsNumTests,' / ',             instance('ins')/original/Cost[4]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/original/Cost)[4]/costsWhoWillPay]/@name,' / ',             instance('ins')/original/Cost[4]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/original/Cost[5], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/original/Cost)[5]/costsType]/@name,' / ',             instance('ins')/original/Cost[5]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/original/Cost)[5]/costsSiteAnalysis]/@name,' / ',             instance('ins')/original/Cost[5]/costsSiteAnalysisOther,' / ',             instance('ins')/original/Cost[5]/costsPerTest,' / ',             instance('ins')/original/Cost[5]/costsNumTests,' / ',             instance('ins')/original/Cost[5]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/original/Cost)[5]/costsWhoWillPay]/@name,' / ',             instance('ins')/original/Cost[5]/costsWhoWillPayOther , ')'), '')           )" name="orgNodeCost"/><exf:variable value="(instance('ins')/suggestions/Cost[@revIndex=$revIndexCost])" name="sugNodeSetCost"/><exf:variable value="concat(           if(instance('ins')/suggestions/Cost[1], concat('('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/suggestions/Cost)[1]/costsType]/@name,' / ',             instance('ins')/suggestions/Cost[1]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/suggestions/Cost)[1]/costsSiteAnalysis]/@name,' / ',             instance('ins')/suggestions/Cost[1]/costsSiteAnalysisOther,' / ',             instance('ins')/suggestions/Cost[1]/costsPerTest,' / ',             instance('ins')/suggestions/Cost[1]/costsNumTests,' / ',             instance('ins')/suggestions/Cost[1]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/suggestions/Cost)[1]/costsWhoWillPay]/@name,' / ',             instance('ins')/suggestions/Cost[1]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/suggestions/Cost[2], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/suggestions/Cost)[2]/costsType]/@name,' / ',             instance('ins')/suggestions/Cost[2]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/suggestions/Cost)[2]/costsSiteAnalysis]/@name,' / ',             instance('ins')/suggestions/Cost[2]/costsSiteAnalysisOther,' / ',             instance('ins')/suggestions/Cost[2]/costsPerTest,' / ',             instance('ins')/suggestions/Cost[2]/costsNumTests,' / ',             instance('ins')/suggestions/Cost[2]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/suggestions/Cost)[2]/costsWhoWillPay]/@name,' / ',             instance('ins')/suggestions/Cost[2]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/suggestions/Cost[3], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/suggestions/Cost)[3]/costsType]/@name,' / ',             instance('ins')/suggestions/Cost[3]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/suggestions/Cost)[3]/costsSiteAnalysis]/@name,' / ',             instance('ins')/suggestions/Cost[3]/costsSiteAnalysisOther,' / ',             instance('ins')/suggestions/Cost[3]/costsPerTest,' / ',             instance('ins')/suggestions/Cost[3]/costsNumTests,' / ',             instance('ins')/suggestions/Cost[3]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/suggestions/Cost)[3]/costsWhoWillPay]/@name,' / ',             instance('ins')/suggestions/Cost[3]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/suggestions/Cost[4], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/suggestions/Cost)[4]/costsType]/@name,' / ',             instance('ins')/suggestions/Cost[4]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/suggestions/Cost)[4]/costsSiteAnalysis]/@name,' / ',             instance('ins')/suggestions/Cost[4]/costsSiteAnalysisOther,' / ',             instance('ins')/suggestions/Cost[4]/costsPerTest,' / ',             instance('ins')/suggestions/Cost[4]/costsNumTests,' / ',             instance('ins')/suggestions/Cost[4]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/suggestions/Cost)[4]/costsWhoWillPay]/@name,' / ',             instance('ins')/suggestions/Cost[4]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/suggestions/Cost[5], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/suggestions/Cost)[5]/costsType]/@name,' / ',             instance('ins')/suggestions/Cost[5]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/suggestions/Cost)[5]/costsSiteAnalysis]/@name,' / ',             instance('ins')/suggestions/Cost[5]/costsSiteAnalysisOther,' / ',             instance('ins')/suggestions/Cost[5]/costsPerTest,' / ',             instance('ins')/suggestions/Cost[5]/costsNumTests,' / ',             instance('ins')/suggestions/Cost[5]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/suggestions/Cost)[5]/costsWhoWillPay]/@name,' / ',             instance('ins')/suggestions/Cost[5]/costsWhoWillPayOther , ')'), '')           )" name="sugNodeCost"/><exf:variable value="(instance('ins')/previous/review/Cost[@revIndex=$revIndexCost])" name="revIndexOCost"/><exf:variable value="instance('ins')/previous/review/Cost[@id=$nsXMLKEY]" name="thisNodeNeedleOldCost"/><exf:variable value="concat(           if(instance('ins')/previous/review/Cost[1], concat('('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/previous/review/Cost)[1]/costsType]/@name,' / ',             instance('ins')/previous/review/Cost[1]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/previous/review/Cost)[1]/costsSiteAnalysis]/@name,' / ',             instance('ins')/previous/review/Cost[1]/costsSiteAnalysisOther,' / ',             instance('ins')/previous/review/Cost[1]/costsPerTest,' / ',             instance('ins')/previous/review/Cost[1]/costsNumTests,' / ',             instance('ins')/previous/review/Cost[1]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/previous/review/Cost)[1]/costsWhoWillPay]/@name,' / ',             instance('ins')/previous/review/Cost[1]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/previous/review/Cost[2], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/previous/review/Cost)[2]/costsType]/@name,' / ',             instance('ins')/previous/review/Cost[2]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/previous/review/Cost)[2]/costsSiteAnalysis]/@name,' / ',             instance('ins')/previous/review/Cost[2]/costsSiteAnalysisOther,' / ',             instance('ins')/previous/review/Cost[2]/costsPerTest,' / ',             instance('ins')/previous/review/Cost[2]/costsNumTests,' / ',             instance('ins')/previous/review/Cost[2]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/previous/review/Cost)[2]/costsWhoWillPay]/@name,' / ',             instance('ins')/previous/review/Cost[2]/costsWhoWillPayOther , ')'), '')           )" name="thisNodeOldCost"/><exf:variable value="concat(           if(instance('ins')/previous/review/original/Cost[1], concat('('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/previous/review/original/Cost)[1]/costsType]/@name,' / ',             instance('ins')/previous/review/original/Cost[1]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/previous/review/original/Cost)[1]/costsSiteAnalysis]/@name,' / ',             instance('ins')/previous/review/original/Cost[1]/costsSiteAnalysisOther,' / ',             instance('ins')/previous/review/original/Cost[1]/costsPerTest,' / ',             instance('ins')/previous/review/original/Cost[1]/costsNumTests,' / ',             instance('ins')/previous/review/original/Cost[1]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/previous/review/original/Cost)[1]/costsWhoWillPay]/@name,' / ',             instance('ins')/previous/review/original/Cost[1]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/previous/review/original/Cost[2], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/previous/review/original/Cost)[2]/costsType]/@name,' / ',             instance('ins')/previous/review/original/Cost[2]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/previous/review/original/Cost)[2]/costsSiteAnalysis]/@name,' / ',             instance('ins')/previous/review/original/Cost[2]/costsSiteAnalysisOther,' / ',             instance('ins')/previous/review/original/Cost[2]/costsPerTest,' / ',             instance('ins')/previous/review/original/Cost[2]/costsNumTests,' / ',             instance('ins')/previous/review/original/Cost[2]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/previous/review/original/Cost)[2]/costsWhoWillPay]/@name,' / ',             instance('ins')/previous/review/original/Cost[2]/costsWhoWillPayOther , ')'), '')           )" name="orgNodeOldCost"/><exf:variable value="concat(           if(instance('ins')/previous/review/suggestions/Cost[1], concat('('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/previous/review/suggestions/Cost)[1]/costsType]/@name,' / ',             instance('ins')/previous/review/suggestions/Cost[1]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/previous/review/suggestions/Cost)[1]/costsSiteAnalysis]/@name,' / ',             instance('ins')/previous/review/suggestions/Cost[1]/costsSiteAnalysisOther,' / ',             instance('ins')/previous/review/suggestions/Cost[1]/costsPerTest,' / ',             instance('ins')/previous/review/suggestions/Cost[1]/costsNumTests,' / ',             instance('ins')/previous/review/suggestions/Cost[1]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/previous/review/suggestions/Cost)[1]/costsWhoWillPay]/@name,' / ',             instance('ins')/previous/review/suggestions/Cost[1]/costsWhoWillPayOther , ')'), ''),           if(instance('ins')/previous/review/suggestions/Cost[2], concat(', ('            ,             (instance('cats')/CostTypes/type)[@id=(instance('ins')/previous/review/suggestions/Cost)[2]/costsType]/@name,' / ',             instance('ins')/previous/review/suggestions/Cost[2]/costsTypeOther,' / ',             (instance('cats')/AnalysisSiteTypes/type)[@id=(instance('ins')/previous/review/suggestions/Cost)[2]/costsSiteAnalysis]/@name,' / ',             instance('ins')/previous/review/suggestions/Cost[2]/costsSiteAnalysisOther,' / ',             instance('ins')/previous/review/suggestions/Cost[2]/costsPerTest,' / ',             instance('ins')/previous/review/suggestions/Cost[2]/costsNumTests,' / ',             instance('ins')/previous/review/suggestions/Cost[2]/costsLineTotal,' / ',             (instance('cats')/CostPayeeTypes/type)[@id=(instance('ins')/previous/review/suggestions/Cost)[2]/costsWhoWillPay]/@name,' / ',             instance('ins')/previous/review/suggestions/Cost[2]/costsWhoWillPayOther , ')'), '')           )" name="sugNodeOldCost"/><td bgcolor="white" class="errors custError"><div><ix:attr value="if($thisNodeNeedleOld/@comment!='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue"><nobr>Previous Comment</nobr></u><div style="width:300px;"><p><h5>Comment:</h5><span style="color:black"><xf:output value="$thisNodeNeedleOld/@comment"/></span></p></div></span></div><div><ix:attr value="if($theCurrentValue != $thePreviousOrgValue, '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:red;cursor:pointer"><script ev:event="click">
           					         var elId="Cost";
           					         var formDef="cruCosts";
           					         var key = model.getValue("@id", contextNode); 
           					         if (model.Frm.linkedOpURI)
           					         var tui = model.Frm.linkedOpURI + model.Frm.formSet.getRoot().__COMPREVURI;
           					         else
           					         var tui =  model.Frm.formSet.getRoot().model.getValue("instance('ins')/primeEntityURI") + model.Frm.formSet.getRoot().__REVURI;      
           					         var xfrmURI = "/configs/renderPreviousRowValueView.xfrm";      
           					         launchXformWindow(xfrmURI, tui, "['" + key + "','" + formDef + "','" + elId + "']", null, 800, 400);      
           					       </script>
           					       New Value Provided</u></span></div><div><xf:select ref="@addcomment"><xf:item><xf:label><nobr>Add Comment</nobr></xf:label><xf:value>1</xf:value></xf:item><script ev:event="xforms-value-changed">
           							cnged = model.getValue("../@changed", contextNode);                            
           							com = model.getValue(".", contextNode);
           							if(!cnged &amp;&amp; !com) model.USA.removeChange();
           							if(!cnged &amp;&amp; com) model.USA.addChange();
           							if(!com) model.setValue("../@comment","",contextNode);
           							model.recalculate();
           					  </script></xf:select><div><ix:attr value="if(@addcomment='1', 'margin-top:-10px;', 'display:none')" name="style"/><xf:textarea ref="@comment"/></div></div></td></tr></xf:repeat></table><br/><table class="addButtons"><tr><td><xf:trigger class="" style=""><xf:label style="">Add</xf:label><xf:action ev:event="DOMActivate"><script>
              params={revIndex:""};
              
              
                  var ndID = model.getValue("instance('ins')/*[last()]/@revIndex", null) * 1;
                  params.revIndex = ndID + 1;
                  params.amend='1'
              
              var xmlDoc = model.Frm.processDoc("", "/applications/IRB/js/addCost", params, "script", "xml");
              var n = model.selectNodeList("instance('ins')", null);
              n[0].appendChild(xmlDoc.documentElement);
              model.refresh();
              model.rebuild();
              model.recalculate();
              model.activateCase("hide-Cost");
              model.activateCase("show-Cost");   
              </script></xf:action></xf:trigger></td></tr></table></td></xf:case><xf:case id="hide-Cost"/></xf:switch></tr><tr class="number"><td class="component number stretchLabel  widestLabel"><exf:variable value="instance('ins')/totalCosts/@revIndex" name="revIndextotalCosts"/><exf:variable value="(instance('ins')/amendmentNodes/totalCosts[@revIndex=$revIndextotalCosts])" name="amdNodeNeedletotalCosts"/><exf:variable value="(instance('ins')/totalCosts[@revIndex=$revIndextotalCosts])" name="thisNodeNeedletotalCosts"/><exf:variable value="instance('ins')/totalCosts" name="thisNodetotalCosts"/><exf:variable value="(instance('ins')/original/totalCosts[@revIndex=$revIndextotalCosts])" name="orgNodetotalCosts"/><exf:variable value="(instance('ins')/suggestions/totalCosts[@revIndex=$revIndextotalCosts])" name="sugNodeSettotalCosts"/><exf:variable value="(instance('ins')/suggestions/totalCosts[@revIndex=$revIndextotalCosts])" name="sugNodetotalCosts"/><exf:variable value="instance('ins')/previous/review/totalCosts/@revIndex" name="revIndexOtotalCosts"/><exf:variable value="(instance('ins')/previous/review/totalCosts[@revIndex=$revIndexOtotalCosts])" name="thisNodeNeedleOldtotalCosts"/><exf:variable value="instance('ins')/previous/review/totalCosts" name="thisNodeOldtotalCosts"/><exf:variable value="(instance('ins')/previous/review/original/totalCosts[@revIndex=$revIndexOtotalCosts])" name="orgNodeOldtotalCosts"/><exf:variable value="(instance('ins')/previous/review/suggestions/totalCosts[@revIndex=$revIndexOtotalCosts])" name="sugNodeSetOldtotalCosts"/><exf:variable value="(instance('ins')/previous/review/suggestions/totalCosts[@revIndex=$revIndexOtotalCosts])" name="sugNodeOldtotalCosts"/><xf:input style="width:80px" ref="instance('ins')/totalCosts"><xf:label>Total Costs</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedletotalCosts/@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></td><td class="options"/><td class="errors custError"><div><ix:attr value="if($orgNodetotalCosts != $sugNodetotalCosts, '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedletotalCosts/@acceptjust!='1', 'color:red', 'color:green')" name="style"/>
              Amendment </u><div style="width:300px;"><table style="background-color:white;"><tr><td style="background-color:white;vertical-align:top;"><b><span style="color:red;">Prior Value</span></b></td><td style="background-color:white;vertical-align:top;color:black"><span><xf:output value="$orgNodetotalCosts"/></span><br/></td></tr><tr><td style="background-color:white;vertical-align:top;"><b><span style="color:green;">Case Value
                      </span></b></td><td style="background-color:white;vertical-align:top;color:black"><span><xf:output value="$sugNodetotalCosts"/></span><br/></td></tr></table><hr/><p><h5>Comment:</h5><p style="padding:5px;margin:5px; color:black"><xf:output value="if($thisNodeNeedletotalCosts/@comment!='', $thisNodeNeedletotalCosts/@comment, 'None provided')"/></p></p><hr/><p><h5>Justification:</h5><p style="padding:5px;margin:5px;border:1px red solid; color:black"><ix:attr value="if($thisNodeNeedletotalCosts/@acceptjust='1', 'padding:5px;margin:5px;border:1px green solid; color:black', 'padding:5px;margin:5px;border:1px red solid; color:black')" name="style"/><xf:output value="if($thisNodeNeedletotalCosts/@justification!='', $thisNodeNeedletotalCosts/@justification, 'None provided')"/></p></p></div></span></div></td></tr><tr class="number"><td class="component number stretchLabel  widestLabel"><exf:variable value="instance('ins')/totalCRUCosts/@revIndex" name="revIndextotalCRUCosts"/><exf:variable value="(instance('ins')/amendmentNodes/totalCRUCosts[@revIndex=$revIndextotalCRUCosts])" name="amdNodeNeedletotalCRUCosts"/><exf:variable value="(instance('ins')/totalCRUCosts[@revIndex=$revIndextotalCRUCosts])" name="thisNodeNeedletotalCRUCosts"/><exf:variable value="instance('ins')/totalCRUCosts" name="thisNodetotalCRUCosts"/><exf:variable value="(instance('ins')/original/totalCRUCosts[@revIndex=$revIndextotalCRUCosts])" name="orgNodetotalCRUCosts"/><exf:variable value="(instance('ins')/suggestions/totalCRUCosts[@revIndex=$revIndextotalCRUCosts])" name="sugNodeSettotalCRUCosts"/><exf:variable value="(instance('ins')/suggestions/totalCRUCosts[@revIndex=$revIndextotalCRUCosts])" name="sugNodetotalCRUCosts"/><exf:variable value="instance('ins')/previous/review/totalCRUCosts/@revIndex" name="revIndexOtotalCRUCosts"/><exf:variable value="(instance('ins')/previous/review/totalCRUCosts[@revIndex=$revIndexOtotalCRUCosts])" name="thisNodeNeedleOldtotalCRUCosts"/><exf:variable value="instance('ins')/previous/review/totalCRUCosts" name="thisNodeOldtotalCRUCosts"/><exf:variable value="(instance('ins')/previous/review/original/totalCRUCosts[@revIndex=$revIndexOtotalCRUCosts])" name="orgNodeOldtotalCRUCosts"/><exf:variable value="(instance('ins')/previous/review/suggestions/totalCRUCosts[@revIndex=$revIndexOtotalCRUCosts])" name="sugNodeSetOldtotalCRUCosts"/><exf:variable value="(instance('ins')/previous/review/suggestions/totalCRUCosts[@revIndex=$revIndexOtotalCRUCosts])" name="sugNodeOldtotalCRUCosts"/><xf:input style="width:80px" ref="instance('ins')/totalCRUCosts"><xf:label>Total Costs Paid by CRU</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedletotalCRUCosts/@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></td><td class="options"/><td class="errors custError"><div><ix:attr value="if($orgNodetotalCRUCosts != $sugNodetotalCRUCosts, '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedletotalCRUCosts/@acceptjust!='1', 'color:red', 'color:green')" name="style"/>
              Amendment </u><div style="width:300px;"><table style="background-color:white;"><tr><td style="background-color:white;vertical-align:top;"><b><span style="color:red;">Prior Value</span></b></td><td style="background-color:white;vertical-align:top;color:black"><span><xf:output value="$orgNodetotalCRUCosts"/></span><br/></td></tr><tr><td style="background-color:white;vertical-align:top;"><b><span style="color:green;">Case Value
                      </span></b></td><td style="background-color:white;vertical-align:top;color:black"><span><xf:output value="$sugNodetotalCRUCosts"/></span><br/></td></tr></table><hr/><p><h5>Comment:</h5><p style="padding:5px;margin:5px; color:black"><xf:output value="if($thisNodeNeedletotalCRUCosts/@comment!='', $thisNodeNeedletotalCRUCosts/@comment, 'None provided')"/></p></p><hr/><p><h5>Justification:</h5><p style="padding:5px;margin:5px;border:1px red solid; color:black"><ix:attr value="if($thisNodeNeedletotalCRUCosts/@acceptjust='1', 'padding:5px;margin:5px;border:1px green solid; color:black', 'padding:5px;margin:5px;border:1px red solid; color:black')" name="style"/><xf:output value="if($thisNodeNeedletotalCRUCosts/@justification!='', $thisNodeNeedletotalCRUCosts/@justification, 'None provided')"/></p></p></div></span></div></td></tr><tr class="line"><td><hr/></td></tr><tr class="number"><td class="component number stretchLabel  widestLabel"><exf:variable value="instance('ins')/compTotalCRU/@revIndex" name="revIndexcompTotalCRU"/><exf:variable value="(instance('ins')/amendmentNodes/compTotalCRU[@revIndex=$revIndexcompTotalCRU])" name="amdNodeNeedlecompTotalCRU"/><exf:variable value="(instance('ins')/compTotalCRU[@revIndex=$revIndexcompTotalCRU])" name="thisNodeNeedlecompTotalCRU"/><exf:variable value="instance('ins')/compTotalCRU" name="thisNodecompTotalCRU"/><exf:variable value="(instance('ins')/original/compTotalCRU[@revIndex=$revIndexcompTotalCRU])" name="orgNodecompTotalCRU"/><exf:variable value="(instance('ins')/suggestions/compTotalCRU[@revIndex=$revIndexcompTotalCRU])" name="sugNodeSetcompTotalCRU"/><exf:variable value="(instance('ins')/suggestions/compTotalCRU[@revIndex=$revIndexcompTotalCRU])" name="sugNodecompTotalCRU"/><exf:variable value="instance('ins')/previous/review/compTotalCRU/@revIndex" name="revIndexOcompTotalCRU"/><exf:variable value="(instance('ins')/previous/review/compTotalCRU[@revIndex=$revIndexOcompTotalCRU])" name="thisNodeNeedleOldcompTotalCRU"/><exf:variable value="instance('ins')/previous/review/compTotalCRU" name="thisNodeOldcompTotalCRU"/><exf:variable value="(instance('ins')/previous/review/original/compTotalCRU[@revIndex=$revIndexOcompTotalCRU])" name="orgNodeOldcompTotalCRU"/><exf:variable value="(instance('ins')/previous/review/suggestions/compTotalCRU[@revIndex=$revIndexOcompTotalCRU])" name="sugNodeSetOldcompTotalCRU"/><exf:variable value="(instance('ins')/previous/review/suggestions/compTotalCRU[@revIndex=$revIndexOcompTotalCRU])" name="sugNodeOldcompTotalCRU"/><xf:input style="width:80px" ref="instance('ins')/compTotalCRU"><xf:hint>This value is copied from Procedures &gt; Compensation.</xf:hint><xf:label>Total Compensation Paid by CRU</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedlecompTotalCRU/@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></td><td class="options"/><td class="errors custError"><div><ix:attr value="if($orgNodecompTotalCRU != $sugNodecompTotalCRU, '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedlecompTotalCRU/@acceptjust!='1', 'color:red', 'color:green')" name="style"/>
              Amendment </u><div style="width:300px;"><table style="background-color:white;"><tr><td style="background-color:white;vertical-align:top;"><b><span style="color:red;">Prior Value</span></b></td><td style="background-color:white;vertical-align:top;color:black"><span><xf:output value="$orgNodecompTotalCRU"/></span><br/></td></tr><tr><td style="background-color:white;vertical-align:top;"><b><span style="color:green;">Case Value
                      </span></b></td><td style="background-color:white;vertical-align:top;color:black"><span><xf:output value="$sugNodecompTotalCRU"/></span><br/></td></tr></table><hr/><p><h5>Comment:</h5><p style="padding:5px;margin:5px; color:black"><xf:output value="if($thisNodeNeedlecompTotalCRU/@comment!='', $thisNodeNeedlecompTotalCRU/@comment, 'None provided')"/></p></p><hr/><p><h5>Justification:</h5><p style="padding:5px;margin:5px;border:1px red solid; color:black"><ix:attr value="if($thisNodeNeedlecompTotalCRU/@acceptjust='1', 'padding:5px;margin:5px;border:1px green solid; color:black', 'padding:5px;margin:5px;border:1px red solid; color:black')" name="style"/><xf:output value="if($thisNodeNeedlecompTotalCRU/@justification!='', $thisNodeNeedlecompTotalCRU/@justification, 'None provided')"/></p></p></div></span></div></td></tr><tr class="number"><td class="component number stretchLabel  widestLabel"><exf:variable value="instance('ins')/totalCRU/@revIndex" name="revIndextotalCRU"/><exf:variable value="(instance('ins')/amendmentNodes/totalCRU[@revIndex=$revIndextotalCRU])" name="amdNodeNeedletotalCRU"/><exf:variable value="(instance('ins')/totalCRU[@revIndex=$revIndextotalCRU])" name="thisNodeNeedletotalCRU"/><exf:variable value="instance('ins')/totalCRU" name="thisNodetotalCRU"/><exf:variable value="(instance('ins')/original/totalCRU[@revIndex=$revIndextotalCRU])" name="orgNodetotalCRU"/><exf:variable value="(instance('ins')/suggestions/totalCRU[@revIndex=$revIndextotalCRU])" name="sugNodeSettotalCRU"/><exf:variable value="(instance('ins')/suggestions/totalCRU[@revIndex=$revIndextotalCRU])" name="sugNodetotalCRU"/><exf:variable value="instance('ins')/previous/review/totalCRU/@revIndex" name="revIndexOtotalCRU"/><exf:variable value="(instance('ins')/previous/review/totalCRU[@revIndex=$revIndexOtotalCRU])" name="thisNodeNeedleOldtotalCRU"/><exf:variable value="instance('ins')/previous/review/totalCRU" name="thisNodeOldtotalCRU"/><exf:variable value="(instance('ins')/previous/review/original/totalCRU[@revIndex=$revIndexOtotalCRU])" name="orgNodeOldtotalCRU"/><exf:variable value="(instance('ins')/previous/review/suggestions/totalCRU[@revIndex=$revIndexOtotalCRU])" name="sugNodeSetOldtotalCRU"/><exf:variable value="(instance('ins')/previous/review/suggestions/totalCRU[@revIndex=$revIndexOtotalCRU])" name="sugNodeOldtotalCRU"/><xf:input style="width:80px" ref="instance('ins')/totalCRU"><xf:label>Total Costs and Compensation Paid by CRU</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedletotalCRU/@amdchanged">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:input></td><td class="options"/><td class="errors custError"><div><ix:attr value="if($orgNodetotalCRU != $sugNodetotalCRU, '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedletotalCRU/@acceptjust!='1', 'color:red', 'color:green')" name="style"/>
              Amendment </u><div style="width:300px;"><table style="background-color:white;"><tr><td style="background-color:white;vertical-align:top;"><b><span style="color:red;">Prior Value</span></b></td><td style="background-color:white;vertical-align:top;color:black"><span><xf:output value="$orgNodetotalCRU"/></span><br/></td></tr><tr><td style="background-color:white;vertical-align:top;"><b><span style="color:green;">Case Value
                      </span></b></td><td style="background-color:white;vertical-align:top;color:black"><span><xf:output value="$sugNodetotalCRU"/></span><br/></td></tr></table><hr/><p><h5>Comment:</h5><p style="padding:5px;margin:5px; color:black"><xf:output value="if($thisNodeNeedletotalCRU/@comment!='', $thisNodeNeedletotalCRU/@comment, 'None provided')"/></p></p><hr/><p><h5>Justification:</h5><p style="padding:5px;margin:5px;border:1px red solid; color:black"><ix:attr value="if($thisNodeNeedletotalCRU/@acceptjust='1', 'padding:5px;margin:5px;border:1px green solid; color:black', 'padding:5px;margin:5px;border:1px red solid; color:black')" name="style"/><xf:output value="if($thisNodeNeedletotalCRU/@justification!='', $thisNodeNeedletotalCRU/@justification, 'None provided')"/></p></p></div></span></div></td></tr></table></div></div><div class="bottomNav"><table><tr><td class="back"><div class="nav" style="float:right"><script ev:event="click">
                    model.Frm.navigateTo("previousTab");
                  </script><div style="float:left" class="command">previous</div><img style="float:right" src="../fil/system/resources/ideate/imgs/left.png"/></div></td><td class="next"><div class="nav" style="float:left"><script ev:event="click">
                    model.Frm.navigateTo("nextTab");
                  </script><img style="float:left" src="../fil/system/resources/ideate/imgs/right.png"/><div style="float:right" class="command">next</div></div></td></tr></table><div style="text-align:center; font-size:10px;margin-top:30px;">© <xf:output value="script('copywrite(2012)')"/></div></div></form>