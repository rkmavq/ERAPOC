<?xml version="1.0" encoding="UTF-8"?>
<form xmlns="http://www.w3.org/2002/06/xhtml2" xmlns:ix="http://itensil.com/ns/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:exf="http://www.exforms.org/exf/1-0" xmlns:xf="http://www.w3.org/2002/xforms"><xf:model id="fmodel"><xf:instance id="ins"><data/></xf:instance><xf:instance id="meta"><data/></xf:instance><xf:instance id="cats"><data/></xf:instance><xf:instance id="review"><data/></xf:instance><xf:instance id="form"><data><tabID>33a</tabID><ping>0</ping><AMD/><form updatedBy="" updated="" createdBy="" created=""/><tempRevIndex>-1</tempRevIndex><tempSugIndex>1</tempSugIndex><searchText/><searchAddNew/><records/><fullSearchText/><fullSearchRecords/><col1/><col2/><col3/><document/><temp/><someVariable id=""/><fragmentId/><comp uri=""/><loggedInUserId/><loggedInUserName/><pagemode/></data></xf:instance><xf:instance id="bootstrap"><data><js>/resources/services/appForms/main.js</js></data></xf:instance><xf:instance id="config"><data/></xf:instance><xf:instance id="baseOp"><data/></xf:instance><script ev:event="xforms-model-construct-done">
      bootstrapSharedXfrm(model);
      model.Frm = new appForm(model, "consent");
      
      
      
      model.setValue("instance('form')/loggedInUserId", model.Frm.getLoggedInUserId()); 
      model.setValue("instance('form')/loggedInUserName", model.Frm.getLoggedInUserName()); 
      
      model.setValue("instance('form')/pagemode", model.Frm.getMode()); 
      
      
        //model.Frm.loadAppFile('ins', "/data/irb.xml", "1");
        
        
        
        
    		  if(model.Frm.formSet.getRoot().__AMND){
            model.Frm.loadOpFile('ins', model.Frm.formSet.getRoot().__COMPREVURI, "1");
          }else{
            model.Frm.loadAppFile('ins', model.Frm.formSet.getRoot().__REVURI, "1");
          }
    		  model.Frm.loadAppFile('meta', "/data/projectData.xml", "0");model.Frm.loadAppFile('cats', "/data/catagories.xml", "0");
          if(model.Frm.formSet.getRoot().__AMND){
          model.Frm.loadOpFile('review', model.Frm.formSet.getRoot().__COMPREVURI, "1");
          model.Frm.loadOpFile('ins', model.Frm.formSet.getRoot().__COMPREVURI, "1");
          }else{
          model.Frm.loadAppFile('review', model.Frm.formSet.getRoot().__REVURI, "1");
          }
          
          if (model.Frm.formSet.getRoot().__REVURI.indexOf("/reviews") &gt; -1) model.Frm.revewMode = -1;
          
        
      model.Frm.loadMetaData();
      
      
        includeSharedJS("/resources/applications/IRB/js/clientSideFunctions.js");
        model.USA = new irbProtocol(model);
      
      model.refresh();
      model.rebuild();
      model.recalculate();
      <script ev:event="xforms-value-changed">
          //model.USA.registerChangeLog('review', '33a')
          //model.USA.registerChangeLog('ins', '33a')
          model.USA.registerChangeLog('comments', '33a')
        </script></script><script ev:event="xforms-ready"/><xf:submission instance="ins" id="submitins" replace="none" method="put"><xf:action ev:event="xforms-submit-done"/><xf:action ev:event="xforms-submit-error"><xf:message level="ephemeral">Problem saving (ins)</xf:message></xf:action></xf:submission><xf:submission instance="review" id="submitreview" replace="none" method="put"><xf:action ev:event="xforms-submit-done"/><xf:action ev:event="xforms-submit-error"><xf:message level="ephemeral">Problem saving (review)</xf:message></xf:action></xf:submission><xf:bind readonly="true()" nodeset="//link/@title"/><xf:bind nodeset="instance('form')/document" type="ix:file"/><xf:bind readonly="true()" relevant="true()" nodeset="instance('ins')/Person[role='PI']/name"/><xf:bind readonly="true()" relevant="true()" nodeset="instance('ins')/contextGroup"/><xf:bind readonly="true()" relevant="false()" nodeset="instance('ins')/status"/><xf:bind relevant="false()" readonly="true()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/@*"/><xf:bind relevant="false()" readonly="true()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/*/@*"/><xf:bind readonly="false()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/@comment"/><xf:bind readonly="false()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/*/@comment"/><xf:bind readonly="false()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/@req"/><xf:bind readonly="false()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/*/@req"/><xf:bind relevant="false()" readonly="true()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']"/><xf:bind relevant="false()" readonly="true()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/*"/><xf:bind readonly="false()" nodeset="instance('ins')/*[@revIndex and local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/@addcomment"/><xf:bind readonly="false()" nodeset="instance('ins')/*[@revIndex and local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/*/@addcomment"/><xf:bind readonly="false()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/@req"/><xf:bind readonly="false()" nodeset="instance('ins')/*[local-name()!='original' and local-name()!='suggestions' and local-name()!='previous']/*/@req"/></xf:model><script ev:event="xforms-value-changed">
          model.USA.___EVAL_CHANGE_ON_SAVE = true;
        </script><style>
          div.formFrame div.commentBox{
          background-color:white;
          border: 2px solid gray;
          padding: 5px;
          width: 500px;
          }
          
          div.formFrame div.commentBox div.xfctrl{
          background-color:none;
          }
          
          div.formFrame div.commentBox div.xfctrl label{
          width:100px;
          }
          
          div.formFrame div.commentBox div.xfctrl textarea{
          width:390px;
          }
          
          
          div.formFrame td.custError{
          background-color:none;
          border:none;
          vertical-align:top;
          width:200px;
          padding-left:10px;
          color:red;
          font-weight:bold;
          }
          
          div.formFrame td.custError div.xfctrl tr{
            background-color:#f3f6fb !important;
          }
          
          div.formFrame td.custError div.xfctrl tr td{
            background-color:#f3f6fb !important;
          }
          
          div.formFrame tr td.custError div.xfctrl{
            background-color:#f3f6fb !important;
          }
          
          div.formFrame td.custError div{
          background-color:#f3f6fb !important;
          }
          
          div.formFrame td.custError .xfctrl{
            background-color:#f3f6fb !important;
          }
          
          div.formFrame table.fullColLayout tr td.custError div.xfctrl{
          background-color:none;
          }
          
          
          .wikiView div.formFrame table.fullColLayout tr td.custError div.xfctrl textarea {
          margin-top:10px;
          }
          
          .wikiView div.formFrame table.fullColLayout tr td.custError div.xfctrl {
            position:static;
            border-color:white;
          }
          div.formFrame tr td.custError div.xfctrl{
            position:static;
            border-color:white;
          }          
          
          .wikiView div.formFrame table.basicColLayout tr td.custError div.xfctrl textarea  {
            margin-top:10px;
          }
          
        </style><ix:template name="QuickSearch"><div style="padding:8px;width:400px"><table style="width:240px"><tr><td><xf:input id="searchBox" ref="instance('form')/searchText" style="width:140px"><xf:label style="width:50px">Lookup:</xf:label></xf:input></td><td><div style="margin-right:20px;"><u class="link" style="color:blue;cursor:pointer;text-decoration:underline;">Go</u><script ev:event="click">
                  model.Frm.executeQuickSearch();  
                </script></div></td></tr></table><hr/><xf:switch><xf:case exf:if="1" id="hide-quicksearch"/><xf:case id="show-quicksearch"><exf:variable name="records" value="instance('form')/records//rec"/><exf:variable name="pingVar" value="instance('form')/ping"/><div><ix:attr name="style" value="if($pingVar &gt; 0 and $pingVar &gt; 20, '', 'display:none')"/><h3><xf:output value="instance('form')/ping"/> records available, displaying the top 20 rows. Please use the Lookup box to search.</h3></div><div><ix:attr name="style" value="if($pingVar &gt; 0 and $pingVar &lt; 20, '', 'display:none')"/><h3><xf:output value="instance('form')/ping"/> records available, displaying <xf:output value="instance('form')/ping"/> rows. Please use the Lookup box to search.</h3></div><div><ix:attr name="style" value="if(count($records)=0, '', 'display:none')"/><h1>No Matches</h1><div><ix:attr value="if(instance('form')/searchAddNew='1', 'margin-left:10px;margin-top:20px;', 'display:none')" name="style"/>...please refine your search, <br/><br/><span style="margin-left:20px;">or 
                    <u style="cursor:pointer;color:blue">request that this <xf:output value="script('model.Frm.quickSearch.addNew.entName;')"/> be added to the system.
                      
                      <xf:action ev:event="click"><xf:setvalue value="instance('form')/searchText" ref="instance('form')/t[@i='1']"/><ix:dialog style="width:400px;" id="newValue" title="Add New Value" class="quickSearchDialog"><xf:repeat nodeset="instance('form')/t[@l!='']"><xf:input ref="."><ix:attr value="if(@t='text', 'width:400px;', 'display:none')" name="style"/><xf:label style="width:150px;"><xf:output value="@l"/></xf:label></xf:input><xf:select ref="." appearance="full"><ix:attr value="if(@t='yn', 'margin-left:150px;width:250px;', 'display:none')" name="style"/><xf:item><xf:label><xf:output value="@l"/></xf:label><xf:value>1</xf:value></xf:item></xf:select></xf:repeat><br/><table style=""><tr><td style="margin-right:10px;"><xf:trigger style="background-color:#DDDDDD;border-color:black;"><xf:label>Add</xf:label><xf:action ev:event="DOMActivate"><script>
                                      model.Frm.addFromQuickSearch();
                                    </script><xf:close ev:event="DOMActivate"/></xf:action></xf:trigger></td><td style="width:50%"><xf:trigger style="background-color:#DDDDDD;border-color:black;"><xf:label>Cancel</xf:label><xf:action ev:event="DOMActivate"><script>model.Frm.resetQuickSearch()</script><xf:close ev:event="DOMActivate"/></xf:action></xf:trigger></td></tr></table></ix:dialog></xf:action></u></span></div></div><div><ix:attr value="if(count($records) &gt; 150, '', 'display:none')" name="style"/><h1>Too Many Matches</h1>Please refine your search.</div><table class="quickSearchMatches"><ix:attr value="if(count($records) &lt;= 500 and count($records) &gt; 0, '', 'display:none')" name="style"/><tr><th style="text-align:left;"><xf:output value="instance('form')/col1"/></th><th style="text-align:left;padding-left:20px"><xf:output value="instance('form')/col2"/></th><th style="text-align:left;padding-left:20px"><xf:output value="instance('form')/col3"/></th></tr><xf:repeat nodeset="$records"><tr><td style="vertical-align:top; width:33%"><u class="clickable"><xf:output value="(attribute::node())[position()=script('SH.is_ie ? 4 : 3')]"/><xf:close ev:event="click"/><script ev:event="click"> 
                              var indx = model.getValue("@id", contextNode);
                              var val = model.getValue("@name", contextNode);
                              if(val == "") val = model.getValue("(attribute::node())[position()=script('SH.is_ie ? 4 : 3')]", contextNode);
                              model.Frm.quickSearchSelect(indx, val);
                              var code = model.Frm.quickSearch.code;
                              if(code) eval(code);
                              if(model.Frm.quickSearch.save) model.Frm.saveAll();
                              event.stopPropagation();
                            </script></u></td><td style="vertical-align:top;padding-left:20px; width:30%"><xf:output value="if(instance('form')/col2 and instance('form')/col2 != '', (attribute::node())[position()=script('SH.is_ie ? 3 : 2')], '')"/></td><td style="vertical-align:top;padding-left:20px; width:30%"><xf:output value="if(instance('form')/col3 and instance('form')/col3 != '', (attribute::node())[position()=script('SH.is_ie ? 2 : 1')], '')"/></td></tr></xf:repeat></table><br/><br/></xf:case></xf:switch></div></ix:template><div class="formFrame" id="allcontrols"><div style="display:none;"><xf:input id="documentDrop" ref="instance('form')/document"><xf:action ev:event="xforms-value-changed" exf:if="instance('form')/document != ''"><script> 
                var n = model.getValue(".", contextNode);
                if(n != "") model.Frm.linkFile(n);
                document.__UPLOADTYPE = "";//Re-setting the value
              </script></xf:action></xf:input></div><div class="body"><h1/><table class="basicColLayout"><tr class="checkboxes"><td class="component  widestLabel "><exf:variable value="'sug'" name="sugNodeOldconcentProcess"/><exf:variable value="'origin'" name="orgNodeOldconcentProcess"/><exf:variable value="'body'" name="thisNodeOldconcentProcess"/><exf:variable value="instance('ins')/concentProcess/@revIndex" name="revIndexconcentProcess"/><exf:variable value="(instance('ins')/amendmentNodes/concentProcess[@revIndex=$revIndexconcentProcess])" name="amdNodeNeedleconcentProcess"/><exf:variable value="(instance('ins')/concentProcess[@revIndex=$revIndexconcentProcess])" name="thisNodeNeedleconcentProcess"/><exf:variable value="instance('ins')/concentProcess" name="thisNodeVconcentProcess"/><exf:variable value="instance('ins')/concentProcess" name="thisNodeconcentProcess"/><exf:variable value="(instance('ins')/original/concentProcess[@revIndex=$revIndexconcentProcess])" name="orgNodeVconcentProcess"/><exf:variable value="(instance('ins')/original/concentProcess[@revIndex=$revIndexconcentProcess])" name="orgNodeconcentProcess"/><exf:variable value="(instance('ins')/suggestions/concentProcess[@revIndex=$revIndexconcentProcess])" name="sugNodeSetconcentProcess"/><exf:variable value="(instance('ins')/suggestions/concentProcess[@revIndex=$revIndexconcentProcess])" name="sugNodeVconcentProcess"/><exf:variable value="(instance('ins')/suggestions/concentProcess[@revIndex=$revIndexconcentProcess])" name="sugNodeconcentProcess"/><exf:variable value="instance('ins')/previous/review/concentProcess/@revIndex" name="revIndexOconcentProcess"/><exf:variable value="(instance('ins')/previous/review/concentProcess[@revIndex=$revIndexOconcentProcess])" name="thisNodeNeedleOldconcentProcess"/><exf:variable value="instance('ins')/previous/review/concentProcess" name="thisNodeVOldconcentProcess"/><exf:variable value="instance('ins')/previous/review/concentProcess" name="thisNodeOldconcentProcess"/><exf:variable value="(instance('ins')/previous/review/original/concentProcess[@revIndex=$revIndexOconcentProcess])" name="orgNodeVOldconcentProcess"/><exf:variable value="(instance('ins')/previous/review/original/concentProcess[@revIndex=$revIndexOconcentProcess])" name="orgNodeOldconcentProcess"/><exf:variable value="(instance('ins')/previous/review/suggestions/concentProcess[@revIndex=$revIndexOconcentProcess])" name="sugNodeSetOldconcentProcess"/><exf:variable value="(instance('ins')/previous/review/suggestions/concentProcess[@revIndex=$revIndexOconcentProcess])" name="sugNodeVOldconcentProcess"/><exf:variable value="(instance('ins')/previous/review/suggestions/concentProcess[@revIndex=$revIndexOconcentProcess])" name="sugNodeOldconcentProcess"/><exf:variable value="instance('cats')/processTypes/type[not(@inactive) or @inactive=''][@id=$sugNodeVOldconcentProcess]/@name" name="sugNodeOldconcentProcess"/><xf:select ref="instance('ins')/concentProcess" appearance="full" id="concentProcess"><xf:label>Consent Process</xf:label><xf:repeat nodeset="instance('cats')/processTypes/type[not(@inactive) or @inactive='']"><xf:item><xf:label><xf:output value="@name"/></xf:label><xf:value><xf:output value="@id"/></xf:value></xf:item></xf:repeat><script ev:event="xforms-value-changed">
			x = model.getValue(".", contextNode);
			if(x.indexOf('PARPERM') &lt; 0) {
				model.setValue("instance('ins')/consPermission", "");
				model.setValue("instance('ins')/waiveParentalCriteriaSet", "");
				model.setValue("instance('ins')/waiveParentalCriteriaSetJustify", "");
				var dl = model.getValue("instance('ins')/PPDoc/@docLink",null);
				if(dl) model.Frm.deleteDocumentRef(dl, 'ins');
				model.setValue("instance('ins')/PPDoc/@uri", "");
				model.setValue("instance('ins')/PPDoc/@docLink", "");
				model.setValue("instance('ins')/PPDoc", "");
				model.setValue("instance('ins')/assentPermission", "");
				model.setValue("instance('ins')/assentProcess", "");
				var dl1 = model.getValue("instance('ins')/assentForm/@docLink",null);
				if(dl1) model.Frm.deleteDocumentRef(dl1, 'ins');
				model.setValue("instance('ins')/assentForm/@uri", "");
				model.setValue("instance('ins')/assentForm/@docLink", "");
				model.setValue("instance('ins')/assentForm", "");
				model.setValue("instance('ins')/assentDocumentProcess", "");
				model.setValue("instance('ins')/assentDocumentDesc", "");
				model.setValue("instance('ins')/consCapability", "");
				model.setValue("instance('ins')/waiveAssentCriteriaSet", "");
				model.setValue("instance('ins')/waiveAssentCriteriaSetJustification", "");
				model.setValue("instance('ins')/designedBenefits", "");
			}
			if(x.indexOf('LAR') &lt; 0) {
				model.setValue("instance('ins')/indCapableOfConsent", "");
				model.setValue("instance('ins')/permissionList", "");
				model.setValue("instance('ins')/assentOfSubjects", "");
			}
            model.recalculate();
			model.refresh();
			model.USA.rebuildTabs();
			model.activateCase("hide-nrd");
            model.activateCase("show-nrd");
        </script><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedleconcentProcess/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:select></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetconcentProcess[(.) != $orgNodeVconcentProcess]" name="othersconcentProcess"/><div><div><ix:attr value="if($thisNodeNeedleconcentProcess/@officeComm and $thisNodeNeedleconcentProcess/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedleconcentProcess/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedleconcentProcess/@req  and $thisNodeNeedleconcentProcess/@req = '' and ($thisNodeNeedleconcentProcess/@comment !='' or count($othersconcentProcess) != 0), 'color:red', if($thisNodeNeedleconcentProcess/@req  and $thisNodeNeedleconcentProcess/@req = '' and ($thisNodeNeedleconcentProcess/@comment ='' and count($othersconcentProcess) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedleconcentProcess/@req  and $thisNodeNeedleconcentProcess/@req ='', 'Set Action', if($thisNodeNeedleconcentProcess/@req = 'change', 'Change Required', if($thisNodeNeedleconcentProcess/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedleconcentProcess/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedleconcentProcess/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedleconcentProcess/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedleconcentProcess/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="box"><td class="component textarea    widestLabel"><exf:variable value="instance('ins')/whereWhenConcent/@revIndex" name="revIndexwhereWhenConcent"/><exf:variable value="(instance('ins')/amendmentNodes/whereWhenConcent[@revIndex=$revIndexwhereWhenConcent])" name="amdNodeNeedlewhereWhenConcent"/><exf:variable value="(instance('ins')/whereWhenConcent[@revIndex=$revIndexwhereWhenConcent])" name="thisNodeNeedlewhereWhenConcent"/><exf:variable value="instance('ins')/whereWhenConcent" name="thisNodewhereWhenConcent"/><exf:variable value="(instance('ins')/original/whereWhenConcent[@revIndex=$revIndexwhereWhenConcent])" name="orgNodewhereWhenConcent"/><exf:variable value="(instance('ins')/suggestions/whereWhenConcent[@revIndex=$revIndexwhereWhenConcent])" name="sugNodeSetwhereWhenConcent"/><exf:variable value="(instance('ins')/suggestions/whereWhenConcent[@revIndex=$revIndexwhereWhenConcent])" name="sugNodewhereWhenConcent"/><exf:variable value="instance('ins')/previous/review/whereWhenConcent/@revIndex" name="revIndexOwhereWhenConcent"/><exf:variable value="(instance('ins')/previous/review/whereWhenConcent[@revIndex=$revIndexOwhereWhenConcent])" name="thisNodeNeedleOldwhereWhenConcent"/><exf:variable value="instance('ins')/previous/review/whereWhenConcent" name="thisNodeOldwhereWhenConcent"/><exf:variable value="(instance('ins')/previous/review/original/whereWhenConcent[@revIndex=$revIndexOwhereWhenConcent])" name="orgNodeOldwhereWhenConcent"/><exf:variable value="(instance('ins')/previous/review/suggestions/whereWhenConcent[@revIndex=$revIndexOwhereWhenConcent])" name="sugNodeSetOldwhereWhenConcent"/><exf:variable value="(instance('ins')/previous/review/suggestions/whereWhenConcent[@revIndex=$revIndexOwhereWhenConcent])" name="sugNodeOldwhereWhenConcent"/><xf:textarea class="" ref="instance('ins')/whereWhenConcent"><xf:label>Where and When Consent Will Be Obtained</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedlewhereWhenConcent/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:textarea></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetwhereWhenConcent[(.) != $orgNodewhereWhenConcent]" name="otherswhereWhenConcent"/><div><div><ix:attr value="if($thisNodeNeedlewhereWhenConcent/@officeComm and $thisNodeNeedlewhereWhenConcent/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedlewhereWhenConcent/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedlewhereWhenConcent/@req  and $thisNodeNeedlewhereWhenConcent/@req = '' and ($thisNodeNeedlewhereWhenConcent/@comment !='' or count($otherswhereWhenConcent) != 0), 'color:red', if($thisNodeNeedlewhereWhenConcent/@req  and $thisNodeNeedlewhereWhenConcent/@req = '' and ($thisNodeNeedlewhereWhenConcent/@comment ='' and count($otherswhereWhenConcent) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedlewhereWhenConcent/@req  and $thisNodeNeedlewhereWhenConcent/@req ='', 'Set Action', if($thisNodeNeedlewhereWhenConcent/@req = 'change', 'Change Required', if($thisNodeNeedlewhereWhenConcent/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedlewhereWhenConcent/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedlewhereWhenConcent/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedlewhereWhenConcent/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedlewhereWhenConcent/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="bigbox"><ix:attr value="if(instance('ins')/useHUD != '1', '', 'display:none')" name="style"/><td class="component textarea   widestLabel"><exf:variable value="instance('ins')/consentWaiting/@revIndex" name="revIndexconsentWaiting"/><exf:variable value="(instance('ins')/amendmentNodes/consentWaiting[@revIndex=$revIndexconsentWaiting])" name="amdNodeNeedleconsentWaiting"/><exf:variable value="(instance('ins')/consentWaiting[@revIndex=$revIndexconsentWaiting])" name="thisNodeNeedleconsentWaiting"/><exf:variable value="instance('ins')/consentWaiting" name="thisNodeconsentWaiting"/><exf:variable value="(instance('ins')/original/consentWaiting[@revIndex=$revIndexconsentWaiting])" name="orgNodeconsentWaiting"/><exf:variable value="(instance('ins')/suggestions/consentWaiting[@revIndex=$revIndexconsentWaiting])" name="sugNodeSetconsentWaiting"/><exf:variable value="(instance('ins')/suggestions/consentWaiting[@revIndex=$revIndexconsentWaiting])" name="sugNodeconsentWaiting"/><exf:variable value="instance('ins')/previous/review/consentWaiting/@revIndex" name="revIndexOconsentWaiting"/><exf:variable value="(instance('ins')/previous/review/consentWaiting[@revIndex=$revIndexOconsentWaiting])" name="thisNodeNeedleOldconsentWaiting"/><exf:variable value="instance('ins')/previous/review/consentWaiting" name="thisNodeOldconsentWaiting"/><exf:variable value="(instance('ins')/previous/review/original/consentWaiting[@revIndex=$revIndexOconsentWaiting])" name="orgNodeOldconsentWaiting"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentWaiting[@revIndex=$revIndexOconsentWaiting])" name="sugNodeSetOldconsentWaiting"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentWaiting[@revIndex=$revIndexOconsentWaiting])" name="sugNodeOldconsentWaiting"/><xf:textarea style="height:10em;" class="" ref="instance('ins')/consentWaiting"><xf:label>Waiting Period for Obtaining Consent</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedleconsentWaiting/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:textarea></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetconsentWaiting[(.) != $orgNodeconsentWaiting]" name="othersconsentWaiting"/><div><div><ix:attr value="if($thisNodeNeedleconsentWaiting/@officeComm and $thisNodeNeedleconsentWaiting/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedleconsentWaiting/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedleconsentWaiting/@req  and $thisNodeNeedleconsentWaiting/@req = '' and ($thisNodeNeedleconsentWaiting/@comment !='' or count($othersconsentWaiting) != 0), 'color:red', if($thisNodeNeedleconsentWaiting/@req  and $thisNodeNeedleconsentWaiting/@req = '' and ($thisNodeNeedleconsentWaiting/@comment ='' and count($othersconsentWaiting) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedleconsentWaiting/@req  and $thisNodeNeedleconsentWaiting/@req ='', 'Set Action', if($thisNodeNeedleconsentWaiting/@req = 'change', 'Change Required', if($thisNodeNeedleconsentWaiting/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedleconsentWaiting/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedleconsentWaiting/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedleconsentWaiting/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedleconsentWaiting/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="yesnobuttons"><td class="component   widestLabel"><exf:variable value="instance('ins')/consentSOPHRP/@revIndex" name="revIndexconsentSOPHRP"/><exf:variable value="(instance('ins')/amendmentNodes/consentSOPHRP[@revIndex=$revIndexconsentSOPHRP])" name="amdNodeNeedleconsentSOPHRP"/><exf:variable value="(instance('ins')/consentSOPHRP[@revIndex=$revIndexconsentSOPHRP])" name="thisNodeNeedleconsentSOPHRP"/><exf:variable value="instance('ins')/consentSOPHRP" name="thisNodeconsentSOPHRP"/><exf:variable value="(instance('ins')/original/consentSOPHRP[@revIndex=$revIndexconsentSOPHRP])" name="orgNodeconsentSOPHRP"/><exf:variable value="(instance('ins')/original/consentSOPHRP[@revIndex=$revIndexconsentSOPHRP])" name="orgNodeVconsentSOPHRP"/><exf:variable value="(instance('ins')/suggestions/consentSOPHRP[@revIndex=$revIndexconsentSOPHRP])" name="sugNodeSetconsentSOPHRP"/><exf:variable value="(instance('ins')/suggestions/consentSOPHRP[@revIndex=$revIndexconsentSOPHRP])" name="sugNodeconsentSOPHRP"/><exf:variable value="instance('ins')/previous/review/consentSOPHRP/@revIndex" name="revIndexOconsentSOPHRP"/><exf:variable value="(instance('ins')/previous/review/consentSOPHRP[@revIndex=$revIndexOconsentSOPHRP])" name="thisNodeNeedleOldconsentSOPHRP"/><exf:variable value="instance('ins')/previous/review/consentSOPHRP" name="thisNodeOldconsentSOPHRP"/><exf:variable value="(instance('ins')/previous/review/original/consentSOPHRP[@revIndex=$revIndexOconsentSOPHRP])" name="orgNodeOldconsentSOPHRP"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentSOPHRP[@revIndex=$revIndexOconsentSOPHRP])" name="sugNodeSetOldconsentSOPHRP"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentSOPHRP[@revIndex=$revIndexOconsentSOPHRP])" name="sugNodeOldconsentSOPHRP"/><table class="horizontalSelects"><tr><td class="yesBox readonly"><span style="label">RE1509 Informed Consent Process for Research Is Being Used</span></td><td class="noBox readonly"><span style="value"><xf:output value="if(instance('ins')/consentSOPHRP = '1', 'Yes', if(instance('ins')/consentSOPHRP = '0', 'No', ''))"/></span></td></tr></table></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetconsentSOPHRP[(.) != $orgNodeVconsentSOPHRP]" name="othersconsentSOPHRP"/><div><div><ix:attr value="if($thisNodeNeedleconsentSOPHRP/@officeComm and $thisNodeNeedleconsentSOPHRP/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedleconsentSOPHRP/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedleconsentSOPHRP/@req  and $thisNodeNeedleconsentSOPHRP/@req = '' and ($thisNodeNeedleconsentSOPHRP/@comment !='' or count($othersconsentSOPHRP) != 0), 'color:red', if($thisNodeNeedleconsentSOPHRP/@req  and $thisNodeNeedleconsentSOPHRP/@req = '' and ($thisNodeNeedleconsentSOPHRP/@comment ='' and count($othersconsentSOPHRP) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedleconsentSOPHRP/@req  and $thisNodeNeedleconsentSOPHRP/@req ='', 'Set Action', if($thisNodeNeedleconsentSOPHRP/@req = 'change', 'Change Required', if($thisNodeNeedleconsentSOPHRP/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedleconsentSOPHRP/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedleconsentSOPHRP/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedleconsentSOPHRP/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedleconsentSOPHRP/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="radiobuttons"><ix:attr value="if(instance('ins')/consentSOPHRP = '0', '', 'display:none')" name="style"/><td class="component   widestLabel"><exf:variable value="instance('ins')/consentType/@revIndex" name="revIndexconsentType"/><exf:variable value="(instance('ins')/amendmentNodes/consentType[@revIndex=$revIndexconsentType])" name="amdNodeNeedleconsentType"/><exf:variable value="(instance('ins')/consentType[@revIndex=$revIndexconsentType])" name="thisNodeNeedleconsentType"/><exf:variable value="instance('ins')/consentType" name="thisNodeVconsentType"/><exf:variable value="instance('cats')/consentType/type[not(@inactive) or @inactive=''][@id=$thisNodeVconsentType]/@name" name="thisNodeconsentType"/><exf:variable value="(instance('ins')/original/consentType[@revIndex=$revIndexconsentType])" name="orgNodeVconsentType"/><exf:variable value="instance('cats')/consentType/type[not(@inactive) or @inactive=''][@id=$orgNodeVconsentType]/@name" name="orgNodeconsentType"/><exf:variable value="(instance('ins')/suggestions/consentType[@revIndex=$revIndexconsentType])" name="sugNodeSetconsentType"/><exf:variable value="(instance('ins')/suggestions/consentType[@revIndex=$revIndexconsentType])" name="sugNodeVconsentType"/><exf:variable value="instance('cats')/consentType/type[not(@inactive) or @inactive=''][@id=$sugNodeVconsentType]/@name" name="sugNodeconsentType"/><exf:variable value="instance('ins')/previous/review/consentType/@revIndex" name="revIndexOconsentType"/><exf:variable value="(instance('ins')/previous/review/consentType[@revIndex=$revIndexOconsentType])" name="thisNodeNeedleOldconsentType"/><exf:variable value="instance('ins')/previous/review/consentType" name="thisNodeVOldconsentType"/><exf:variable value="instance('cats')/consentType/type[not(@inactive) or @inactive=''][@id=$thisNodeVOldconsentType]/@name" name="thisNodeOldconsentType"/><exf:variable value="(instance('ins')/previous/review/original/consentType[@revIndex=$revIndexOconsentType])" name="orgNodeVOldconsentType"/><exf:variable value="instance('cats')/consentType/type[not(@inactive) or @inactive=''][@id=$orgNodeVOldconsentType]/@name" name="orgNodeOldconsentType"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentType[@revIndex=$revIndexOconsentType])" name="sugNodeSetOldconsentType"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentType[@revIndex=$revIndexOconsentType])" name="sugNodeVOldconsentType"/><exf:variable value="instance('cats')/consentType/type[not(@inactive) or @inactive=''][@id=$sugNodeVOldconsentType]/@name" name="sugNodeOldconsentType"/><exf:variable value="instance('cats')/consentType/type[not(@inactive) or @inactive=''][@id=$sugNodeVOldconsentType]/@name" name="sugNodeOldconsentType"/><table class="horizontalSelects"><tr><td class="yesBox readonly"><span style="label">Consent</span></td><td class="noBox readonly"><span style="value"><xf:output value="instance('cats')/consentType/type[not(@inactive) or @inactive=''][@id=instance('ins')/consentType]/@name"/></span></td></tr></table></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetconsentType[(.) != $orgNodeVconsentType]" name="othersconsentType"/><div><div><ix:attr value="if($thisNodeNeedleconsentType/@officeComm and $thisNodeNeedleconsentType/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedleconsentType/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedleconsentType/@req  and $thisNodeNeedleconsentType/@req = '' and ($thisNodeNeedleconsentType/@comment !='' or count($othersconsentType) != 0), 'color:red', if($thisNodeNeedleconsentType/@req  and $thisNodeNeedleconsentType/@req = '' and ($thisNodeNeedleconsentType/@comment ='' and count($othersconsentType) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedleconsentType/@req  and $thisNodeNeedleconsentType/@req ='', 'Set Action', if($thisNodeNeedleconsentType/@req = 'change', 'Change Required', if($thisNodeNeedleconsentType/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedleconsentType/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedleconsentType/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedleconsentType/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedleconsentType/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="bigbox"><ix:attr value="if(instance('ins')/consentType='OTH', '', 'display:none')" name="style"/><td class="component textarea   widestLabel"><exf:variable value="instance('ins')/consentTypeOtherSpecify/@revIndex" name="revIndexconsentTypeOtherSpecify"/><exf:variable value="(instance('ins')/amendmentNodes/consentTypeOtherSpecify[@revIndex=$revIndexconsentTypeOtherSpecify])" name="amdNodeNeedleconsentTypeOtherSpecify"/><exf:variable value="(instance('ins')/consentTypeOtherSpecify[@revIndex=$revIndexconsentTypeOtherSpecify])" name="thisNodeNeedleconsentTypeOtherSpecify"/><exf:variable value="instance('ins')/consentTypeOtherSpecify" name="thisNodeconsentTypeOtherSpecify"/><exf:variable value="(instance('ins')/original/consentTypeOtherSpecify[@revIndex=$revIndexconsentTypeOtherSpecify])" name="orgNodeconsentTypeOtherSpecify"/><exf:variable value="(instance('ins')/suggestions/consentTypeOtherSpecify[@revIndex=$revIndexconsentTypeOtherSpecify])" name="sugNodeSetconsentTypeOtherSpecify"/><exf:variable value="(instance('ins')/suggestions/consentTypeOtherSpecify[@revIndex=$revIndexconsentTypeOtherSpecify])" name="sugNodeconsentTypeOtherSpecify"/><exf:variable value="instance('ins')/previous/review/consentTypeOtherSpecify/@revIndex" name="revIndexOconsentTypeOtherSpecify"/><exf:variable value="(instance('ins')/previous/review/consentTypeOtherSpecify[@revIndex=$revIndexOconsentTypeOtherSpecify])" name="thisNodeNeedleOldconsentTypeOtherSpecify"/><exf:variable value="instance('ins')/previous/review/consentTypeOtherSpecify" name="thisNodeOldconsentTypeOtherSpecify"/><exf:variable value="(instance('ins')/previous/review/original/consentTypeOtherSpecify[@revIndex=$revIndexOconsentTypeOtherSpecify])" name="orgNodeOldconsentTypeOtherSpecify"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentTypeOtherSpecify[@revIndex=$revIndexOconsentTypeOtherSpecify])" name="sugNodeSetOldconsentTypeOtherSpecify"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentTypeOtherSpecify[@revIndex=$revIndexOconsentTypeOtherSpecify])" name="sugNodeOldconsentTypeOtherSpecify"/><xf:textarea style="height:10em;" class="" ref="instance('ins')/consentTypeOtherSpecify"><xf:label>Specify</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedleconsentTypeOtherSpecify/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:textarea></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetconsentTypeOtherSpecify[(.) != $orgNodeconsentTypeOtherSpecify]" name="othersconsentTypeOtherSpecify"/><div><div><ix:attr value="if($thisNodeNeedleconsentTypeOtherSpecify/@officeComm and $thisNodeNeedleconsentTypeOtherSpecify/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedleconsentTypeOtherSpecify/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedleconsentTypeOtherSpecify/@req  and $thisNodeNeedleconsentTypeOtherSpecify/@req = '' and ($thisNodeNeedleconsentTypeOtherSpecify/@comment !='' or count($othersconsentTypeOtherSpecify) != 0), 'color:red', if($thisNodeNeedleconsentTypeOtherSpecify/@req  and $thisNodeNeedleconsentTypeOtherSpecify/@req = '' and ($thisNodeNeedleconsentTypeOtherSpecify/@comment ='' and count($othersconsentTypeOtherSpecify) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedleconsentTypeOtherSpecify/@req  and $thisNodeNeedleconsentTypeOtherSpecify/@req ='', 'Set Action', if($thisNodeNeedleconsentTypeOtherSpecify/@req = 'change', 'Change Required', if($thisNodeNeedleconsentTypeOtherSpecify/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedleconsentTypeOtherSpecify/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedleconsentTypeOtherSpecify/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedleconsentTypeOtherSpecify/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedleconsentTypeOtherSpecify/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="bigbox"><ix:attr value="if(instance('ins')/useHUD != '1' and instance('ins')/consentSOPHRP = '0', '', 'display:none')" name="style"/><td class="component textarea   widestLabel"><exf:variable value="instance('ins')/consentDescribe/@revIndex" name="revIndexconsentDescribe"/><exf:variable value="(instance('ins')/amendmentNodes/consentDescribe[@revIndex=$revIndexconsentDescribe])" name="amdNodeNeedleconsentDescribe"/><exf:variable value="(instance('ins')/consentDescribe[@revIndex=$revIndexconsentDescribe])" name="thisNodeNeedleconsentDescribe"/><exf:variable value="instance('ins')/consentDescribe" name="thisNodeconsentDescribe"/><exf:variable value="(instance('ins')/original/consentDescribe[@revIndex=$revIndexconsentDescribe])" name="orgNodeconsentDescribe"/><exf:variable value="(instance('ins')/suggestions/consentDescribe[@revIndex=$revIndexconsentDescribe])" name="sugNodeSetconsentDescribe"/><exf:variable value="(instance('ins')/suggestions/consentDescribe[@revIndex=$revIndexconsentDescribe])" name="sugNodeconsentDescribe"/><exf:variable value="instance('ins')/previous/review/consentDescribe/@revIndex" name="revIndexOconsentDescribe"/><exf:variable value="(instance('ins')/previous/review/consentDescribe[@revIndex=$revIndexOconsentDescribe])" name="thisNodeNeedleOldconsentDescribe"/><exf:variable value="instance('ins')/previous/review/consentDescribe" name="thisNodeOldconsentDescribe"/><exf:variable value="(instance('ins')/previous/review/original/consentDescribe[@revIndex=$revIndexOconsentDescribe])" name="orgNodeOldconsentDescribe"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentDescribe[@revIndex=$revIndexOconsentDescribe])" name="sugNodeSetOldconsentDescribe"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentDescribe[@revIndex=$revIndexOconsentDescribe])" name="sugNodeOldconsentDescribe"/><xf:textarea style="height:10em;" class="" ref="instance('ins')/consentDescribe"><xf:label>Specify Why RE1509 Is Not Being Used</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedleconsentDescribe/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:textarea></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetconsentDescribe[(.) != $orgNodeconsentDescribe]" name="othersconsentDescribe"/><div><div><ix:attr value="if($thisNodeNeedleconsentDescribe/@officeComm and $thisNodeNeedleconsentDescribe/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedleconsentDescribe/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedleconsentDescribe/@req  and $thisNodeNeedleconsentDescribe/@req = '' and ($thisNodeNeedleconsentDescribe/@comment !='' or count($othersconsentDescribe) != 0), 'color:red', if($thisNodeNeedleconsentDescribe/@req  and $thisNodeNeedleconsentDescribe/@req = '' and ($thisNodeNeedleconsentDescribe/@comment ='' and count($othersconsentDescribe) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedleconsentDescribe/@req  and $thisNodeNeedleconsentDescribe/@req ='', 'Set Action', if($thisNodeNeedleconsentDescribe/@req = 'change', 'Change Required', if($thisNodeNeedleconsentDescribe/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedleconsentDescribe/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedleconsentDescribe/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedleconsentDescribe/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedleconsentDescribe/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="instructions"><td colspan="4"><span><h4><font size="2"><component type="instructions">
	    <font size="2">HonorHealth IRB Policies <a href="https://honorhealth-shea.policystat.com/policy/9083375/latest/" target="_blank">https://honorhealth-shea.policystat.com/policy/9083375/latest/</a>
		</font>
		<option type="widestLabel"/>
	</component></font></h4></span></td></tr><tr class="checkboxes"><ix:attr value="if(instance('ins')/useHUD != '1', '', 'display:none')" name="style"/><td class="component  widestLabel "><exf:variable value="'sug'" name="sugNodeOldconsentWritten"/><exf:variable value="'origin'" name="orgNodeOldconsentWritten"/><exf:variable value="'body'" name="thisNodeOldconsentWritten"/><exf:variable value="instance('ins')/consentWritten/@revIndex" name="revIndexconsentWritten"/><exf:variable value="(instance('ins')/amendmentNodes/consentWritten[@revIndex=$revIndexconsentWritten])" name="amdNodeNeedleconsentWritten"/><exf:variable value="(instance('ins')/consentWritten[@revIndex=$revIndexconsentWritten])" name="thisNodeNeedleconsentWritten"/><exf:variable value="instance('ins')/consentWritten" name="thisNodeVconsentWritten"/><exf:variable value="instance('ins')/consentWritten" name="thisNodeconsentWritten"/><exf:variable value="(instance('ins')/original/consentWritten[@revIndex=$revIndexconsentWritten])" name="orgNodeVconsentWritten"/><exf:variable value="(instance('ins')/original/consentWritten[@revIndex=$revIndexconsentWritten])" name="orgNodeconsentWritten"/><exf:variable value="(instance('ins')/suggestions/consentWritten[@revIndex=$revIndexconsentWritten])" name="sugNodeSetconsentWritten"/><exf:variable value="(instance('ins')/suggestions/consentWritten[@revIndex=$revIndexconsentWritten])" name="sugNodeVconsentWritten"/><exf:variable value="(instance('ins')/suggestions/consentWritten[@revIndex=$revIndexconsentWritten])" name="sugNodeconsentWritten"/><exf:variable value="instance('ins')/previous/review/consentWritten/@revIndex" name="revIndexOconsentWritten"/><exf:variable value="(instance('ins')/previous/review/consentWritten[@revIndex=$revIndexOconsentWritten])" name="thisNodeNeedleOldconsentWritten"/><exf:variable value="instance('ins')/previous/review/consentWritten" name="thisNodeVOldconsentWritten"/><exf:variable value="instance('ins')/previous/review/consentWritten" name="thisNodeOldconsentWritten"/><exf:variable value="(instance('ins')/previous/review/original/consentWritten[@revIndex=$revIndexOconsentWritten])" name="orgNodeVOldconsentWritten"/><exf:variable value="(instance('ins')/previous/review/original/consentWritten[@revIndex=$revIndexOconsentWritten])" name="orgNodeOldconsentWritten"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentWritten[@revIndex=$revIndexOconsentWritten])" name="sugNodeSetOldconsentWritten"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentWritten[@revIndex=$revIndexOconsentWritten])" name="sugNodeVOldconsentWritten"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentWritten[@revIndex=$revIndexOconsentWritten])" name="sugNodeOldconsentWritten"/><exf:variable value="instance('cats')/consentWritten/type[not(@inactive) or @inactive=''][@id=$sugNodeVOldconsentWritten]/@name" name="sugNodeOldconsentWritten"/><xf:select ref="instance('ins')/consentWritten" appearance="full" id="consentWritten"><xf:label>Process to Document Consent in Writing</xf:label><xf:repeat nodeset="instance('cats')/consentWritten/type[not(@inactive) or @inactive='']"><xf:item><xf:label><xf:output value="@name"/></xf:label><xf:value><xf:output value="@id"/></xf:value></xf:item></xf:repeat><script ev:event="xforms-value-changed">
			x = model.getValue(".", contextNode);
			if(x.indexOf('2') &lt; 0) {
				model.setValue("instance('ins')/identJustification", "");
				model.setValue("instance('ins')/waiverOfSignedConsentJustification", "");
				model.setValue("instance('ins')/consentWrittenDescribe", "");
			}
            model.recalculate();
			model.refresh();
			model.USA.rebuildTabs();
			model.activateCase("hide-nrd");
            model.activateCase("show-nrd");
        </script><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedleconsentWritten/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:select></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetconsentWritten[(.) != $orgNodeVconsentWritten]" name="othersconsentWritten"/><div><div><ix:attr value="if($thisNodeNeedleconsentWritten/@officeComm and $thisNodeNeedleconsentWritten/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedleconsentWritten/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedleconsentWritten/@req  and $thisNodeNeedleconsentWritten/@req = '' and ($thisNodeNeedleconsentWritten/@comment !='' or count($othersconsentWritten) != 0), 'color:red', if($thisNodeNeedleconsentWritten/@req  and $thisNodeNeedleconsentWritten/@req = '' and ($thisNodeNeedleconsentWritten/@comment ='' and count($othersconsentWritten) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedleconsentWritten/@req  and $thisNodeNeedleconsentWritten/@req ='', 'Set Action', if($thisNodeNeedleconsentWritten/@req = 'change', 'Change Required', if($thisNodeNeedleconsentWritten/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedleconsentWritten/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedleconsentWritten/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedleconsentWritten/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedleconsentWritten/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="bigbox"><ix:attr value="if(contains(instance('ins')/consentWritten, '2'), '', 'display:none')" name="style"/><td class="component textarea   widestLabel"><exf:variable value="instance('ins')/consentWrittenDescribe/@revIndex" name="revIndexconsentWrittenDescribe"/><exf:variable value="(instance('ins')/amendmentNodes/consentWrittenDescribe[@revIndex=$revIndexconsentWrittenDescribe])" name="amdNodeNeedleconsentWrittenDescribe"/><exf:variable value="(instance('ins')/consentWrittenDescribe[@revIndex=$revIndexconsentWrittenDescribe])" name="thisNodeNeedleconsentWrittenDescribe"/><exf:variable value="instance('ins')/consentWrittenDescribe" name="thisNodeconsentWrittenDescribe"/><exf:variable value="(instance('ins')/original/consentWrittenDescribe[@revIndex=$revIndexconsentWrittenDescribe])" name="orgNodeconsentWrittenDescribe"/><exf:variable value="(instance('ins')/suggestions/consentWrittenDescribe[@revIndex=$revIndexconsentWrittenDescribe])" name="sugNodeSetconsentWrittenDescribe"/><exf:variable value="(instance('ins')/suggestions/consentWrittenDescribe[@revIndex=$revIndexconsentWrittenDescribe])" name="sugNodeconsentWrittenDescribe"/><exf:variable value="instance('ins')/previous/review/consentWrittenDescribe/@revIndex" name="revIndexOconsentWrittenDescribe"/><exf:variable value="(instance('ins')/previous/review/consentWrittenDescribe[@revIndex=$revIndexOconsentWrittenDescribe])" name="thisNodeNeedleOldconsentWrittenDescribe"/><exf:variable value="instance('ins')/previous/review/consentWrittenDescribe" name="thisNodeOldconsentWrittenDescribe"/><exf:variable value="(instance('ins')/previous/review/original/consentWrittenDescribe[@revIndex=$revIndexOconsentWrittenDescribe])" name="orgNodeOldconsentWrittenDescribe"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentWrittenDescribe[@revIndex=$revIndexOconsentWrittenDescribe])" name="sugNodeSetOldconsentWrittenDescribe"/><exf:variable value="(instance('ins')/previous/review/suggestions/consentWrittenDescribe[@revIndex=$revIndexOconsentWrittenDescribe])" name="sugNodeOldconsentWrittenDescribe"/><xf:textarea style="height:10em;" class="" ref="instance('ins')/consentWrittenDescribe"><xf:label>Provide Justification for Verbal Consent Use</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedleconsentWrittenDescribe/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:textarea></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetconsentWrittenDescribe[(.) != $orgNodeconsentWrittenDescribe]" name="othersconsentWrittenDescribe"/><div><div><ix:attr value="if($thisNodeNeedleconsentWrittenDescribe/@officeComm and $thisNodeNeedleconsentWrittenDescribe/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedleconsentWrittenDescribe/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedleconsentWrittenDescribe/@req  and $thisNodeNeedleconsentWrittenDescribe/@req = '' and ($thisNodeNeedleconsentWrittenDescribe/@comment !='' or count($othersconsentWrittenDescribe) != 0), 'color:red', if($thisNodeNeedleconsentWrittenDescribe/@req  and $thisNodeNeedleconsentWrittenDescribe/@req = '' and ($thisNodeNeedleconsentWrittenDescribe/@comment ='' and count($othersconsentWrittenDescribe) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedleconsentWrittenDescribe/@req  and $thisNodeNeedleconsentWrittenDescribe/@req ='', 'Set Action', if($thisNodeNeedleconsentWrittenDescribe/@req = 'change', 'Change Required', if($thisNodeNeedleconsentWrittenDescribe/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedleconsentWrittenDescribe/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedleconsentWrittenDescribe/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedleconsentWrittenDescribe/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedleconsentWrittenDescribe/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="yesnobuttons"><td class="component   widestLabel"><exf:variable value="instance('ins')/enrollNonEnglishSpeaking/@revIndex" name="revIndexenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/amendmentNodes/enrollNonEnglishSpeaking[@revIndex=$revIndexenrollNonEnglishSpeaking])" name="amdNodeNeedleenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/enrollNonEnglishSpeaking[@revIndex=$revIndexenrollNonEnglishSpeaking])" name="thisNodeNeedleenrollNonEnglishSpeaking"/><exf:variable value="instance('ins')/enrollNonEnglishSpeaking" name="thisNodeenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/original/enrollNonEnglishSpeaking[@revIndex=$revIndexenrollNonEnglishSpeaking])" name="orgNodeenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/original/enrollNonEnglishSpeaking[@revIndex=$revIndexenrollNonEnglishSpeaking])" name="orgNodeVenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/suggestions/enrollNonEnglishSpeaking[@revIndex=$revIndexenrollNonEnglishSpeaking])" name="sugNodeSetenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/suggestions/enrollNonEnglishSpeaking[@revIndex=$revIndexenrollNonEnglishSpeaking])" name="sugNodeenrollNonEnglishSpeaking"/><exf:variable value="instance('ins')/previous/review/enrollNonEnglishSpeaking/@revIndex" name="revIndexOenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/previous/review/enrollNonEnglishSpeaking[@revIndex=$revIndexOenrollNonEnglishSpeaking])" name="thisNodeNeedleOldenrollNonEnglishSpeaking"/><exf:variable value="instance('ins')/previous/review/enrollNonEnglishSpeaking" name="thisNodeOldenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/previous/review/original/enrollNonEnglishSpeaking[@revIndex=$revIndexOenrollNonEnglishSpeaking])" name="orgNodeOldenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/previous/review/suggestions/enrollNonEnglishSpeaking[@revIndex=$revIndexOenrollNonEnglishSpeaking])" name="sugNodeSetOldenrollNonEnglishSpeaking"/><exf:variable value="(instance('ins')/previous/review/suggestions/enrollNonEnglishSpeaking[@revIndex=$revIndexOenrollNonEnglishSpeaking])" name="sugNodeOldenrollNonEnglishSpeaking"/><table class="horizontalSelects"><tr><td class="yesBox readonly"><span style="label">Non-English Speaking Participants Will Be Enrolled<xf:hint>If you plan to enroll non-English speaking participants you must have the consent / permission / assent document(s) translated into the appropriate language by a certified translator or a translated and back-translated document, with each translation done by a different translator. The translator's certification or translators' qualifications must accompany the translated documents that are submitted.</xf:hint></span></td><td class="noBox readonly"><span style="value"><xf:output value="if(instance('ins')/enrollNonEnglishSpeaking = '1', 'Yes', if(instance('ins')/enrollNonEnglishSpeaking = '0', 'No', ''))"/></span></td></tr></table></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetenrollNonEnglishSpeaking[(.) != $orgNodeVenrollNonEnglishSpeaking]" name="othersenrollNonEnglishSpeaking"/><div><div><ix:attr value="if($thisNodeNeedleenrollNonEnglishSpeaking/@officeComm and $thisNodeNeedleenrollNonEnglishSpeaking/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedleenrollNonEnglishSpeaking/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedleenrollNonEnglishSpeaking/@req  and $thisNodeNeedleenrollNonEnglishSpeaking/@req = '' and ($thisNodeNeedleenrollNonEnglishSpeaking/@comment !='' or count($othersenrollNonEnglishSpeaking) != 0), 'color:red', if($thisNodeNeedleenrollNonEnglishSpeaking/@req  and $thisNodeNeedleenrollNonEnglishSpeaking/@req = '' and ($thisNodeNeedleenrollNonEnglishSpeaking/@comment ='' and count($othersenrollNonEnglishSpeaking) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedleenrollNonEnglishSpeaking/@req  and $thisNodeNeedleenrollNonEnglishSpeaking/@req ='', 'Set Action', if($thisNodeNeedleenrollNonEnglishSpeaking/@req = 'change', 'Change Required', if($thisNodeNeedleenrollNonEnglishSpeaking/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedleenrollNonEnglishSpeaking/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedleenrollNonEnglishSpeaking/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedleenrollNonEnglishSpeaking/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedleenrollNonEnglishSpeaking/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="bigbox"><ix:attr value="if(instance('ins')/enrollNonEnglishSpeaking = '1', '', 'display:none')" name="style"/><td class="component textarea   widestLabel"><exf:variable value="instance('ins')/languagesOtherThanEnglish/@revIndex" name="revIndexlanguagesOtherThanEnglish"/><exf:variable value="(instance('ins')/amendmentNodes/languagesOtherThanEnglish[@revIndex=$revIndexlanguagesOtherThanEnglish])" name="amdNodeNeedlelanguagesOtherThanEnglish"/><exf:variable value="(instance('ins')/languagesOtherThanEnglish[@revIndex=$revIndexlanguagesOtherThanEnglish])" name="thisNodeNeedlelanguagesOtherThanEnglish"/><exf:variable value="instance('ins')/languagesOtherThanEnglish" name="thisNodelanguagesOtherThanEnglish"/><exf:variable value="(instance('ins')/original/languagesOtherThanEnglish[@revIndex=$revIndexlanguagesOtherThanEnglish])" name="orgNodelanguagesOtherThanEnglish"/><exf:variable value="(instance('ins')/suggestions/languagesOtherThanEnglish[@revIndex=$revIndexlanguagesOtherThanEnglish])" name="sugNodeSetlanguagesOtherThanEnglish"/><exf:variable value="(instance('ins')/suggestions/languagesOtherThanEnglish[@revIndex=$revIndexlanguagesOtherThanEnglish])" name="sugNodelanguagesOtherThanEnglish"/><exf:variable value="instance('ins')/previous/review/languagesOtherThanEnglish/@revIndex" name="revIndexOlanguagesOtherThanEnglish"/><exf:variable value="(instance('ins')/previous/review/languagesOtherThanEnglish[@revIndex=$revIndexOlanguagesOtherThanEnglish])" name="thisNodeNeedleOldlanguagesOtherThanEnglish"/><exf:variable value="instance('ins')/previous/review/languagesOtherThanEnglish" name="thisNodeOldlanguagesOtherThanEnglish"/><exf:variable value="(instance('ins')/previous/review/original/languagesOtherThanEnglish[@revIndex=$revIndexOlanguagesOtherThanEnglish])" name="orgNodeOldlanguagesOtherThanEnglish"/><exf:variable value="(instance('ins')/previous/review/suggestions/languagesOtherThanEnglish[@revIndex=$revIndexOlanguagesOtherThanEnglish])" name="sugNodeSetOldlanguagesOtherThanEnglish"/><exf:variable value="(instance('ins')/previous/review/suggestions/languagesOtherThanEnglish[@revIndex=$revIndexOlanguagesOtherThanEnglish])" name="sugNodeOldlanguagesOtherThanEnglish"/><xf:textarea style="height:10em;" class="" ref="instance('ins')/languagesOtherThanEnglish"><xf:label>What Languages Other Than English Will Be Used</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedlelanguagesOtherThanEnglish/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:textarea></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetlanguagesOtherThanEnglish[(.) != $orgNodelanguagesOtherThanEnglish]" name="otherslanguagesOtherThanEnglish"/><div><div><ix:attr value="if($thisNodeNeedlelanguagesOtherThanEnglish/@officeComm and $thisNodeNeedlelanguagesOtherThanEnglish/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedlelanguagesOtherThanEnglish/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedlelanguagesOtherThanEnglish/@req  and $thisNodeNeedlelanguagesOtherThanEnglish/@req = '' and ($thisNodeNeedlelanguagesOtherThanEnglish/@comment !='' or count($otherslanguagesOtherThanEnglish) != 0), 'color:red', if($thisNodeNeedlelanguagesOtherThanEnglish/@req  and $thisNodeNeedlelanguagesOtherThanEnglish/@req = '' and ($thisNodeNeedlelanguagesOtherThanEnglish/@comment ='' and count($otherslanguagesOtherThanEnglish) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedlelanguagesOtherThanEnglish/@req  and $thisNodeNeedlelanguagesOtherThanEnglish/@req ='', 'Set Action', if($thisNodeNeedlelanguagesOtherThanEnglish/@req = 'change', 'Change Required', if($thisNodeNeedlelanguagesOtherThanEnglish/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedlelanguagesOtherThanEnglish/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedlelanguagesOtherThanEnglish/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedlelanguagesOtherThanEnglish/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedlelanguagesOtherThanEnglish/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="checkboxes"><ix:attr value="if(instance('ins')/enrollNonEnglishSpeaking = '1', '', 'display:none')" name="style"/><td class="component  widestLabel "><exf:variable value="'sug'" name="sugNodeOldlanguagesConsentProcess"/><exf:variable value="'origin'" name="orgNodeOldlanguagesConsentProcess"/><exf:variable value="'body'" name="thisNodeOldlanguagesConsentProcess"/><exf:variable value="instance('ins')/languagesConsentProcess/@revIndex" name="revIndexlanguagesConsentProcess"/><exf:variable value="(instance('ins')/amendmentNodes/languagesConsentProcess[@revIndex=$revIndexlanguagesConsentProcess])" name="amdNodeNeedlelanguagesConsentProcess"/><exf:variable value="(instance('ins')/languagesConsentProcess[@revIndex=$revIndexlanguagesConsentProcess])" name="thisNodeNeedlelanguagesConsentProcess"/><exf:variable value="instance('ins')/languagesConsentProcess" name="thisNodeVlanguagesConsentProcess"/><exf:variable value="instance('ins')/languagesConsentProcess" name="thisNodelanguagesConsentProcess"/><exf:variable value="(instance('ins')/original/languagesConsentProcess[@revIndex=$revIndexlanguagesConsentProcess])" name="orgNodeVlanguagesConsentProcess"/><exf:variable value="(instance('ins')/original/languagesConsentProcess[@revIndex=$revIndexlanguagesConsentProcess])" name="orgNodelanguagesConsentProcess"/><exf:variable value="(instance('ins')/suggestions/languagesConsentProcess[@revIndex=$revIndexlanguagesConsentProcess])" name="sugNodeSetlanguagesConsentProcess"/><exf:variable value="(instance('ins')/suggestions/languagesConsentProcess[@revIndex=$revIndexlanguagesConsentProcess])" name="sugNodeVlanguagesConsentProcess"/><exf:variable value="(instance('ins')/suggestions/languagesConsentProcess[@revIndex=$revIndexlanguagesConsentProcess])" name="sugNodelanguagesConsentProcess"/><exf:variable value="instance('ins')/previous/review/languagesConsentProcess/@revIndex" name="revIndexOlanguagesConsentProcess"/><exf:variable value="(instance('ins')/previous/review/languagesConsentProcess[@revIndex=$revIndexOlanguagesConsentProcess])" name="thisNodeNeedleOldlanguagesConsentProcess"/><exf:variable value="instance('ins')/previous/review/languagesConsentProcess" name="thisNodeVOldlanguagesConsentProcess"/><exf:variable value="instance('ins')/previous/review/languagesConsentProcess" name="thisNodeOldlanguagesConsentProcess"/><exf:variable value="(instance('ins')/previous/review/original/languagesConsentProcess[@revIndex=$revIndexOlanguagesConsentProcess])" name="orgNodeVOldlanguagesConsentProcess"/><exf:variable value="(instance('ins')/previous/review/original/languagesConsentProcess[@revIndex=$revIndexOlanguagesConsentProcess])" name="orgNodeOldlanguagesConsentProcess"/><exf:variable value="(instance('ins')/previous/review/suggestions/languagesConsentProcess[@revIndex=$revIndexOlanguagesConsentProcess])" name="sugNodeSetOldlanguagesConsentProcess"/><exf:variable value="(instance('ins')/previous/review/suggestions/languagesConsentProcess[@revIndex=$revIndexOlanguagesConsentProcess])" name="sugNodeVOldlanguagesConsentProcess"/><exf:variable value="(instance('ins')/previous/review/suggestions/languagesConsentProcess[@revIndex=$revIndexOlanguagesConsentProcess])" name="sugNodeOldlanguagesConsentProcess"/><exf:variable value="instance('cats')/languagesConsentProcess/type[not(@inactive) or @inactive=''][@id=$sugNodeVOldlanguagesConsentProcess]/@name" name="sugNodeOldlanguagesConsentProcess"/><xf:select ref="instance('ins')/languagesConsentProcess" appearance="full" id="languagesConsentProcess"><xf:label>What Process Will Be Used</xf:label><xf:repeat nodeset="instance('cats')/languagesConsentProcess/type[not(@inactive) or @inactive='']"><xf:item><xf:label><xf:output value="@name"/></xf:label><xf:value><xf:output value="@id"/></xf:value></xf:item></xf:repeat><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedlelanguagesConsentProcess/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:select></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetlanguagesConsentProcess[(.) != $orgNodeVlanguagesConsentProcess]" name="otherslanguagesConsentProcess"/><div><div><ix:attr value="if($thisNodeNeedlelanguagesConsentProcess/@officeComm and $thisNodeNeedlelanguagesConsentProcess/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedlelanguagesConsentProcess/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedlelanguagesConsentProcess/@req  and $thisNodeNeedlelanguagesConsentProcess/@req = '' and ($thisNodeNeedlelanguagesConsentProcess/@comment !='' or count($otherslanguagesConsentProcess) != 0), 'color:red', if($thisNodeNeedlelanguagesConsentProcess/@req  and $thisNodeNeedlelanguagesConsentProcess/@req = '' and ($thisNodeNeedlelanguagesConsentProcess/@comment ='' and count($otherslanguagesConsentProcess) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedlelanguagesConsentProcess/@req  and $thisNodeNeedlelanguagesConsentProcess/@req ='', 'Set Action', if($thisNodeNeedlelanguagesConsentProcess/@req = 'change', 'Change Required', if($thisNodeNeedlelanguagesConsentProcess/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedlelanguagesConsentProcess/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedlelanguagesConsentProcess/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedlelanguagesConsentProcess/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedlelanguagesConsentProcess/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr><tr class="instructions"><ix:attr value="if(instance('ins')/languagesConsentProcess = 'LONG', '', 'display:none')" name="style"/><td colspan="4"><span><h4><font size="2"><component type="instructions">
		<visible whenComponent="languagesConsentProcess" hasValue="LONG"/>
		The consent document must be translated into the language of the potential subject, and approved by the IRB, before you can go through the consent process with the non-English speaking person. If, after the project is approved, a short form consent process is needed, please see the PPHS policy and submit a modification.
	    <option type="widestLabel"/>
	</component></font></h4></span></td></tr><tr class="instructions"><ix:attr value="if(instance('ins')/languagesConsentProcess = 'SHORT', '', 'display:none')" name="style"/><td colspan="4"><span><h4><font size="2"><component type="instructions">
		<visible whenComponent="languagesConsentProcess" hasValue="SHORT"/>
	    Attest that you will follow the HonorHealth RE1509 Informed Consent Policy <a href="https://honorhealth-shea.policystat.com/policy/8726637/latest/" target="_blank">https://honorhealth-shea.policystat.com/policy/8726637/latest/</a>
	    <option type="widestLabel"/>
	</component></font></h4></span></td></tr><tr class="bigbox"><ix:attr value="if(instance('ins')/enrollNonEnglishSpeaking = '0', '', 'display:none')" name="style"/><td class="component textarea   widestLabel"><exf:variable value="instance('ins')/justificationNotEnrollingNonEnglishSpeaking/@revIndex" name="revIndexjustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="(instance('ins')/amendmentNodes/justificationNotEnrollingNonEnglishSpeaking[@revIndex=$revIndexjustificationNotEnrollingNonEnglishSpeaking])" name="amdNodeNeedlejustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="(instance('ins')/justificationNotEnrollingNonEnglishSpeaking[@revIndex=$revIndexjustificationNotEnrollingNonEnglishSpeaking])" name="thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="instance('ins')/justificationNotEnrollingNonEnglishSpeaking" name="thisNodejustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="(instance('ins')/original/justificationNotEnrollingNonEnglishSpeaking[@revIndex=$revIndexjustificationNotEnrollingNonEnglishSpeaking])" name="orgNodejustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="(instance('ins')/suggestions/justificationNotEnrollingNonEnglishSpeaking[@revIndex=$revIndexjustificationNotEnrollingNonEnglishSpeaking])" name="sugNodeSetjustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="(instance('ins')/suggestions/justificationNotEnrollingNonEnglishSpeaking[@revIndex=$revIndexjustificationNotEnrollingNonEnglishSpeaking])" name="sugNodejustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="instance('ins')/previous/review/justificationNotEnrollingNonEnglishSpeaking/@revIndex" name="revIndexOjustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="(instance('ins')/previous/review/justificationNotEnrollingNonEnglishSpeaking[@revIndex=$revIndexOjustificationNotEnrollingNonEnglishSpeaking])" name="thisNodeNeedleOldjustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="instance('ins')/previous/review/justificationNotEnrollingNonEnglishSpeaking" name="thisNodeOldjustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="(instance('ins')/previous/review/original/justificationNotEnrollingNonEnglishSpeaking[@revIndex=$revIndexOjustificationNotEnrollingNonEnglishSpeaking])" name="orgNodeOldjustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="(instance('ins')/previous/review/suggestions/justificationNotEnrollingNonEnglishSpeaking[@revIndex=$revIndexOjustificationNotEnrollingNonEnglishSpeaking])" name="sugNodeSetOldjustificationNotEnrollingNonEnglishSpeaking"/><exf:variable value="(instance('ins')/previous/review/suggestions/justificationNotEnrollingNonEnglishSpeaking[@revIndex=$revIndexOjustificationNotEnrollingNonEnglishSpeaking])" name="sugNodeOldjustificationNotEnrollingNonEnglishSpeaking"/><xf:textarea style="height:10em;" class="" ref="instance('ins')/justificationNotEnrollingNonEnglishSpeaking"><xf:label>Justification for Not Enrolling Non-English Speaking Participants</xf:label><xf:action ev:event="xforms-value-changed"><xf:setvalue ref="$thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@changed">1</xf:setvalue><script>if(model.skipRebuild){return;};model.skipRebuild = true;model.USA.addChange();model.rebuild(); model.refresh();model.recalculate();model.USA.rebuildArea('');setTimeout(function(){model.skipRebuild = false}, 1000);</script></xf:action></xf:textarea></td><td class="options"/><td class="errors custError"><exf:variable value="$sugNodeSetjustificationNotEnrollingNonEnglishSpeaking[(.) != $orgNodejustificationNotEnrollingNonEnglishSpeaking]" name="othersjustificationNotEnrollingNonEnglishSpeaking"/><div><div><ix:attr value="if($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@officeComm and $thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@officeComm !='', '', 'display:none')" name="style"/><span class="dialogOverInteractive"><u style="color:blue">Office Comment</u><div style="width:300px;"><p><span style="color:black"><h5>Office Comments:</h5><xf:output value="$thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@officeComm"/></span></p></div></span><br/><br/></div><span class="dialogOverInteractive"><u><ix:attr value="if($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req  and $thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req = '' and ($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@comment !='' or count($othersjustificationNotEnrollingNonEnglishSpeaking) != 0), 'color:red', if($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req  and $thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req = '' and ($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@comment ='' and count($othersjustificationNotEnrollingNonEnglishSpeaking) = 0), 'color:black', 'color:blue'))" name="style"/><xf:output value="if($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req  and $thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req ='', 'Set Action', if($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req = 'change', 'Change Required', if($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req = 'changeSug', 'Change Suggested', if($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req = 'commentOnly', 'Comment Provided', if($thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req = '', 'Set Action', 'Justification Required')))))"/></u><div style="width:300px;"><p><h5>Action:</h5><xf:select1 appearance="full" ref="$thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@req"><xf:item><xf:label>Comment Only</xf:label><xf:value>commentOnly</xf:value></xf:item><xf:item><xf:label>Justification</xf:label><xf:value>comment</xf:value></xf:item><script ev:event="xms-value-changed">
                     //SH.print("OUT");
                     model.USA.addChange(contextNode);
                     model.rebuild();
                     model.refresh();
                     model.recalculate();
                     //SH.print("IN");
                   </script></xf:select1><hr/><br/><i style="font-size:7pt;color:black;">Response Comments:</i><span style="color:black"><xf:textarea ref="$thisNodeNeedlejustificationNotEnrollingNonEnglishSpeaking/@comment" style="width:260px;height:100px;"/></span></p></div></span></div></td></tr></table></div></div><div class="bottomNav"><table><tr><td class="back"><div class="nav" style="float:right"><script ev:event="click">
                    model.Frm.navigateTo("previousTab");
                  </script><div style="float:left" class="command">previous</div><img style="float:right" src="../fil/system/resources/ideate/imgs/left.png"/></div></td><td class="next"><div class="nav" style="float:left"><script ev:event="click">
                    model.Frm.navigateTo("nextTab");
                  </script><img style="float:left" src="../fil/system/resources/ideate/imgs/right.png"/><div style="float:right" class="command">next</div></div></td></tr></table><div style="text-align:center; font-size:10px;margin-top:30px;">© <xf:output value="script('copywrite(2012)')"/></div></div></form>