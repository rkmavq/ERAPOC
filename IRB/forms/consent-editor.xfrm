<?xml version="1.0" encoding="UTF-8"?>
<form xmlns="http://www.w3.org/2002/06/xhtml2" xmlns:ix="http://itensil.com/ns/xforms" xmlns:xf="http://www.w3.org/2002/xforms" xmlns:exf="http://www.exforms.org/exf/1-0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ev="http://www.w3.org/2001/xml-events"><xf:model id="fmodel"><xf:instance id="ins"><data/></xf:instance><xf:instance id="meta"><data/></xf:instance><xf:instance id="cats"><data/></xf:instance><xf:instance id="form"><data><tabID>33a</tabID><ping>0</ping><AMD/><form created="" createdBy="" updated="" updatedBy=""/><tempRevIndex>-1</tempRevIndex><tempSugIndex>1</tempSugIndex><searchText/><searchAddNew/><records/><fullSearchText/><fullSearchRecords/><col1/><col2/><col3/><document/><temp/><someVariable id=""/><fragmentId/><comp uri=""/></data></xf:instance><xf:instance id="bootstrap"><data><js>/resources/services/appForms/main.js</js></data></xf:instance><xf:instance id="config"><data/></xf:instance><xf:instance id="baseOp"><data/></xf:instance><script ev:event="xforms-model-construct-done">
      bootstrapSharedXfrm(model);
      model.Frm = new appForm(model, "consent");
      
      console.info("Editing mode");
      App.sessionConfig = model.Frm.formSet.getRoot().model.sessionConfig;
      model.Frm.loadAppFile('ins', "/data/irb.xml" + "?d=" + (new Date()), "1");
              if(model.Frm.formSet.getRoot().__VERSIONCHANGED){
                model.Frm.formSet.getRoot().__VERSIONCHANGING = false;
                model.reloadInstanceId('ins');
              }
            model.Frm.loadAppFile('meta', "/data/projectData.xml", "0");model.Frm.loadAppFile('cats', "/data/catagories.xml" + "?d=" + (new Date()), "0");
      model.Frm.loadMetaData();
      
      
        includeSharedJS("/resources/applications/IRB/js/clientSideFunctions.js");
        model.USA = new irbProtocol(model);
      
      model.refresh();
      model.rebuild();
      model.recalculate();
      <script ev:event="xforms-value-changed">
          //model.USA.registerChangeLog('review', '33a')
          //model.USA.registerChangeLog('ins', '33a')
          model.USA.registerChangeLog('comments', '33a')
        </script></script><script ev:event="xforms-ready"/><xf:submission method="put" replace="none" id="submitins" instance="ins"><xf:action ev:event="xforms-submit-done"/><xf:action ev:event="xforms-submit-error"><xf:message level="ephemeral">Problem saving (ins)</xf:message></xf:action></xf:submission><xf:bind nodeset="instance(ins)//*" readonly="false()" relevant="true()"/><xf:bind nodeset="instance(meta)//*" readonly="false()" relevant="true()"/><xf:bind nodeset="instance(cats)//*" readonly="false()" relevant="true()"/><xf:bind nodeset="//link/@title" readonly="true()"/><xf:bind type="ix:file" nodeset="instance('form')/document"/><xf:bind readonly="true()" relevant="true()" nodeset="instance('ins')/Person[role='PI']/name"/><xf:bind readonly="true()" relevant="true()" nodeset="instance('ins')/contextGroup"/><xf:bind readonly="true()" relevant="false()" nodeset="instance('ins')/status"/></xf:model><ix:template name="QuickSearch"><div style="padding:8px;width:400px"><table style="width:240px"><tr><td><xf:input style="width:140px" ref="instance('form')/searchText" id="searchBox"><xf:label style="width:50px">Lookup:</xf:label></xf:input></td><td/></tr></table><hr/><xf:switch><xf:case id="hide-quicksearch" exf:if="1"/><xf:case id="show-quicksearch"><exf:variable value="instance('form')/records//rec" name="records"/><exf:variable value="instance('form')/ping" name="pingVar"/><div><ix:attr value="if($pingVar &gt; 0 and $pingVar &gt; 20, '', 'display:none')" name="style"/><h3><xf:output value="instance('form')/ping"/> records available, displaying the top 20 rows. Please use the Lookup box to search.</h3></div><div><ix:attr value="if($pingVar &gt; 0 and $pingVar &lt; 20, '', 'display:none')" name="style"/><h3><xf:output value="instance('form')/ping"/> records available, displaying <xf:output value="instance('form')/ping"/> rows. Please use the Lookup box to search.</h3></div><div><ix:attr value="if(count($records)=0, '', 'display:none')" name="style"/><h1>No Matches</h1></div><div><ix:attr name="style" value="if(count($records) &gt; 150, '', 'display:none')"/><h1>Too Many Matches</h1>Please refine your search.</div><table class="quickSearchMatches"><ix:attr name="style" value="if(count($records) &lt;= 500 and count($records) &gt; 0, '', 'display:none')"/><tr><th style="text-align:left;"><xf:output value="instance('form')/col1"/></th><th style="text-align:left;padding-left:20px"><xf:output value="instance('form')/col2"/></th><th style="text-align:left;padding-left:20px"><xf:output value="instance('form')/col3"/></th></tr><xf:repeat nodeset="$records"><tr><td style="vertical-align:top; width:33%"><u class="clickable"><xf:output value="(attribute::node())[position()=script('SH.is_ie ? 4 : 3')]"/><xf:close ev:event="click"/><script ev:event="click"> 
                              var indx = model.getValue("@id", contextNode);
                              var val = model.getValue("@name", contextNode);
                              if(val == "") val = model.getValue("(attribute::node())[position()=script('SH.is_ie ? 4 : 3')]", contextNode);
                              model.Frm.quickSearchSelect(indx, val);
                              var code = model.Frm.quickSearch.code;
                              if(code) eval(code);
                              if(model.Frm.quickSearch.save) model.Frm.saveAll();
                              event.stopPropagation();
                            </script></u></td><td style="vertical-align:top;padding-left:20px; width:30%"><xf:output value="if(instance('form')/col2 and instance('form')/col2 != '', (attribute::node())[position()=script('SH.is_ie ? 3 : 2')], '')"/></td><td style="vertical-align:top;padding-left:20px; width:30%"><xf:output value="if(instance('form')/col3 and instance('form')/col3 != '', (attribute::node())[position()=script('SH.is_ie ? 2 : 1')], '')"/></td></tr></xf:repeat></table><br/><br/></xf:case></xf:switch></div></ix:template><div id="allcontrols" class="formFrame"><div style="display:none;"><xf:input ref="instance('form')/document" id="documentDrop"><xf:action exf:if="instance('form')/document != ''" ev:event="xforms-value-changed"><script> 
                var n = model.getValue(".", contextNode);
                if(n != "") model.Frm.linkFile(n);
              </script></xf:action></xf:input></div><table class="formMetaLine"><tr/></table><div class="body"><h1/><table class="basicColLayout"><tr class="checkboxes" oncontextmenu="App.sessionConfig.editElement('concentProcess', event);return false;" compId="concentProcess"><td class="component  widestLabel "><xf:select id="concentProcess" appearance="full" ref="instance('ins')/concentProcess"><xf:label>Consent Process</xf:label><xf:repeat nodeset="instance('cats')/processTypes/type[not(@inactive) or @inactive='']"><xf:item><xf:label><xf:output value="@name"/></xf:label><xf:value><xf:output value="@id"/></xf:value></xf:item></xf:repeat><script ev:event="xforms-value-changed">
			x = model.getValue(".", contextNode);
			if(x.indexOf('PARPERM') &lt; 0) {
				model.setValue("instance('ins')/consPermission", "");
				model.setValue("instance('ins')/waiveParentalCriteriaSet", "");
				model.setValue("instance('ins')/waiveParentalCriteriaSetJustify", "");
				var dl = model.getValue("instance('ins')/PPDoc/@docLink",null);
				if(dl) model.Frm.deleteDocumentRef(dl, 'ins');
				model.setValue("instance('ins')/PPDoc/@uri", "");
				model.setValue("instance('ins')/PPDoc/@docLink", "");
				model.setValue("instance('ins')/PPDoc", "");
				model.setValue("instance('ins')/assentPermission", "");
				model.setValue("instance('ins')/assentProcess", "");
				var dl1 = model.getValue("instance('ins')/assentForm/@docLink",null);
				if(dl1) model.Frm.deleteDocumentRef(dl1, 'ins');
				model.setValue("instance('ins')/assentForm/@uri", "");
				model.setValue("instance('ins')/assentForm/@docLink", "");
				model.setValue("instance('ins')/assentForm", "");
				model.setValue("instance('ins')/assentDocumentProcess", "");
				model.setValue("instance('ins')/assentDocumentDesc", "");
				model.setValue("instance('ins')/consCapability", "");
				model.setValue("instance('ins')/waiveAssentCriteriaSet", "");
				model.setValue("instance('ins')/waiveAssentCriteriaSetJustification", "");
				model.setValue("instance('ins')/designedBenefits", "");
			}
			if(x.indexOf('LAR') &lt; 0) {
				model.setValue("instance('ins')/indCapableOfConsent", "");
				model.setValue("instance('ins')/permissionList", "");
				model.setValue("instance('ins')/assentOfSubjects", "");
			}
            model.recalculate();
			model.refresh();
			model.USA.rebuildTabs();
			model.activateCase("hide-nrd");
            model.activateCase("show-nrd");
        </script></xf:select></td></tr><tr class="field" oncontextmenu="App.sessionConfig.editElement('e142f51f-d880-497e-853e-7ff295affd8e', event);return false;" compId="e142f51f-d880-497e-853e-7ff295affd8e"><td class="component  widenLabel "><xf:input ref="instance('ins')/xmlc1cd" class="wide"><xf:label>Custom Field</xf:label><script ev:event="xforms-value-changed"/></xf:input></td><td class="options"/></tr><tr class="box" oncontextmenu="App.sessionConfig.editElement('whereWhenConcent', event);return false;" compId="whereWhenConcent"><td class="component textarea    widestLabel"><xf:textarea ref="instance('ins')/whereWhenConcent" class=""><xf:label>Where and When Consent Will Be Obtained</xf:label></xf:textarea></td><td class="options"/></tr><tr class="bigbox" oncontextmenu="App.sessionConfig.editElement('consentWaiting', event);return false;" compId="consentWaiting"><td class="component textarea   widestLabel"><table style="margin-left:-3px;"><tr class="top"><td style=""><xf:textarea ref="instance('ins')/consentWaiting" class="" style="height:10em;"><xf:label>Waiting Period for Obtaining Consent</xf:label></xf:textarea></td><td><span style="cursor:help;color:blue;padding:3px;" class="helpdialogOver"><img src="../fil/system/resources/ideate/imgs/questionMark.jpg"/><div style="width:200px"><p><span style="color:black"><help>Describe any waiting period available between informing the prospective subject and obtaining the consent.</help></span></p></div></span></td></tr></table></td><td class="options"/></tr><tr class="yesnobuttons" oncontextmenu="App.sessionConfig.editElement('consentSOPHRP', event);return false;" compId="consentSOPHRP"><td class="component   widestLabel"><table class="horizontalSelects"><tr><td class="yesBox"><xf:select1 class="selectYes" appearance="full" ref="instance('ins')/consentSOPHRP" id="consentSOPHRP"><xf:label>SOP HRP-090 Informed Consent Process for Research Is Being Used</xf:label><xf:item><xf:label>Yes</xf:label><xf:value>1</xf:value></xf:item></xf:select1></td><td class="noBox"><xf:select1 appearance="full" ref="instance('ins')/consentSOPHRP" id="consentSOPHRP"><xf:label/><xf:item><xf:label>No</xf:label><xf:value>0</xf:value></xf:item><script ev:event="xforms-value-changed">
                model.recalculate();
                model.rebuild();
                model.refresh();
              </script><script ev:event="xforms-value-changed">
            x = model.getValue(".", contextNode);
            if(x == "1"){
				model.setValue("instance('ins')/consentDescribe", "");
            }
			model.recalculate();
			model.refresh();
			model.rebuild();
        </script></xf:select1></td></tr></table></td></tr><tr class="bigbox" oncontextmenu="App.sessionConfig.editElement('consentDescribe', event);return false;" compId="consentDescribe"><td class="component textarea   widestLabel"><table style="margin-left:-3px;"><tr class="top"><td style=""><xf:textarea ref="instance('ins')/consentDescribe" class="" style="height:10em;"><xf:label>Specify Why SOP HRP-090 Is Not Being Used</xf:label></xf:textarea></td><td><span style="cursor:help;color:blue;padding:3px;" class="helpdialogOver"><img src="../fil/system/resources/ideate/imgs/questionMark.jpg"/><div style="width:200px"><p><span style="color:black"><help>
            Describe the role of the individuals listed in the application as being involved in the consent process. <br/>
			* The time that will be devoted to the consent discussion. <br/> 
			* Steps that will be taken to minimize the possibility of coercion or undue influence. <br/>
			* Steps that will be taken to ensure the subjects' understanding. <br/>
			* Describe any tools that will be utilized during the consent process. <br/>
        </help></span></p></div></span></td></tr></table></td><td class="options"/></tr><tr class="instructions" oncontextmenu="App.sessionConfig.editElement('148374f0-72cf-487f-812a-f8e4de3f71aa', event);return false;" compId="148374f0-72cf-487f-812a-f8e4de3f71aa"><td colspan="4"><span><h3><component type="instructions" id="148374f0-72cf-487f-812a-f8e4de3f71aa" active="1"><font size="2"><a href="http://icahn.mssm.edu/research/pphs/irb" target="_blank">PPHS Worksheets, Checklists and SOPs</a>
		</font><option type="widestLabel"/></component></h3></span></td></tr><tr class="checkboxes" oncontextmenu="App.sessionConfig.editElement('consentWritten', event);return false;" compId="consentWritten"><td class="component  widestLabel "><xf:select id="consentWritten" appearance="full" ref="instance('ins')/consentWritten"><xf:label>Process to Document Consent in Writing</xf:label><xf:repeat nodeset="instance('cats')/consentWritten/type[not(@inactive) or @inactive='']"><xf:item><xf:label><xf:output value="@name"/></xf:label><xf:value><xf:output value="@id"/></xf:value></xf:item></xf:repeat><script ev:event="xforms-value-changed">
			x = model.getValue(".", contextNode);
			if(x.indexOf('2') &lt; 0) {
				model.setValue("instance('ins')/identJustification", "");
				model.setValue("instance('ins')/waiverOfSignedConsentJustification", "");
			}
            model.recalculate();
			model.refresh();
			model.USA.rebuildTabs();
			model.activateCase("hide-nrd");
            model.activateCase("show-nrd");
        </script></xf:select></td></tr><tr class="yesnobuttons" oncontextmenu="App.sessionConfig.editElement('enrollNonEnglishSpeaking', event);return false;" compId="enrollNonEnglishSpeaking"><td class="component   widestLabel"><table style="margin-left:-3px;  width:550px"><tr class="top"><td style=""><table class="horizontalSelects"><tr><td class="yesBox"><xf:select1 class="selectYes" appearance="full" ref="instance('ins')/enrollNonEnglishSpeaking" style="width:450px;" id="enrollNonEnglishSpeaking"><xf:label>Non-English Speaking Participants Will Be Enrolled</xf:label><xf:hint>If you plan to enroll non-English speaking participants you must have the consent / permission / assent document(s) translated into the appropriate language by a certified translator or a translated and back-translated document, with each translation done by a different translator. The translator's certification or translators' qualifications must accompany the translated documents that are submitted.</xf:hint><xf:item><xf:label>Yes</xf:label><xf:value>1</xf:value></xf:item></xf:select1></td><td class="noBox"><xf:select1 appearance="full" ref="instance('ins')/enrollNonEnglishSpeaking" id="enrollNonEnglishSpeaking"><xf:label/><xf:hint>If you plan to enroll non-English speaking participants you must have the consent / permission / assent document(s) translated into the appropriate language by a certified translator or a translated and back-translated document, with each translation done by a different translator. The translator's certification or translators' qualifications must accompany the translated documents that are submitted.</xf:hint><xf:item><xf:label>No</xf:label><xf:value>0</xf:value></xf:item><script ev:event="xforms-value-changed">
                model.recalculate();
                model.rebuild();
                model.refresh();
              </script><script ev:event="xforms-value-changed">
            x = model.getValue(".", contextNode);
            if(x == "0"){
				model.setValue("instance('ins')/languagesOtherThanEnglish", "");
				model.setValue("instance('ins')/languagesConsentProcess", "");
            } else if(x == "1") {
				model.setValue("instance('ins')/justificationNotEnrollingNonEnglishSpeaking", "");
			}
			model.recalculate();
			model.refresh();
			model.rebuild();
        </script></xf:select1></td></tr></table></td><td><span style="cursor:help;color:blue;padding:3px;" class="helpdialogOver"><img src="../fil/system/resources/ideate/imgs/questionMark.jpg"/><div style="width:200px"><p><span style="color:black"><help>If you plan to enroll non-English speaking participants you must have the consent / permission / assent document(s) translated into the appropriate language by a certified translator or a translated and back-translated document, with each translation done by a different translator. The translator's certification or translators' qualifications must accompany the translated documents that are submitted.</help></span></p></div></span></td></tr></table></td></tr><tr class="bigbox" oncontextmenu="App.sessionConfig.editElement('languagesOtherThanEnglish', event);return false;" compId="languagesOtherThanEnglish"><td class="component textarea   widestLabel"><xf:textarea ref="instance('ins')/languagesOtherThanEnglish" class="" style="height:10em;"><xf:label>What Languages Other Than English Will Be Used</xf:label></xf:textarea></td><td class="options"/></tr><tr class="radiobuttons" oncontextmenu="App.sessionConfig.editElement('languagesConsentProcess', event);return false;" compId="languagesConsentProcess"><td class="component   widestLabel"><xf:select1 id="languagesConsentProcess" appearance="full" ref="instance('ins')/languagesConsentProcess"><xf:label>What Process Will Be Used</xf:label><xf:repeat nodeset="instance('cats')/languagesConsentProcess/type[not(@inactive) or @inactive='']"><xf:item><xf:label><xf:output value="@name"/></xf:label><xf:value><xf:output value="@id"/></xf:value></xf:item></xf:repeat></xf:select1></td></tr><tr class="instructions" oncontextmenu="App.sessionConfig.editElement('3eae258f-4e03-49ae-a019-e35bb7d0f26b', event);return false;" compId="3eae258f-4e03-49ae-a019-e35bb7d0f26b"><td colspan="4"><span><h3><component type="instructions" id="3eae258f-4e03-49ae-a019-e35bb7d0f26b" active="1"><option type="widestLabel"/></component></h3></span></td></tr><tr class="instructions" oncontextmenu="App.sessionConfig.editElement('3e1cf472-d03e-40a1-8935-dac140dbd58c', event);return false;" compId="3e1cf472-d03e-40a1-8935-dac140dbd58c"><td colspan="4"><span><h3><component type="instructions" id="3e1cf472-d03e-40a1-8935-dac140dbd58c" active="1"><a href="http://icahn.mssm.edu/research/pphs/guidance" target="_blank">Guidance and Policies &gt; Consenting Non-English Speaking Participants</a><option type="widestLabel"/></component></h3></span></td></tr><tr class="bigbox" oncontextmenu="App.sessionConfig.editElement('justificationNotEnrollingNonEnglishSpeaking', event);return false;" compId="justificationNotEnrollingNonEnglishSpeaking"><td class="component textarea   widestLabel"><xf:textarea ref="instance('ins')/justificationNotEnrollingNonEnglishSpeaking" class="" style="height:10em;"><xf:label>Justification for Not Enrolling Non-English Speaking Participants</xf:label></xf:textarea></td><td class="options"/></tr></table></div></div></form>